{"version":3,"sources":["components/Friends/Friends.module.css","components/Profile/ProfileInfo/ProfileStatus.module.css","components/NavBar/Nav.module.css","components/Common/Preloader/Preloader.module.css","components/FindFriends/FindFriedItem/FindFriendItem.module.css","components/Friends/FriendItem/FriendItem.module.css","serviceWorker.ts","components/NavBar/Nav.tsx","components/Friends/FriendItem/FriendItem.tsx","components/Friends/Friends.tsx","components/Hoc/withAuthRedirect.tsx","API/API.tsx","redux/friendsReducer.ts","redux/usersSelectors.ts","components/Friends/FriendsContainer.tsx","components/Messages/DialogItem/DialogItem.tsx","redux/messagesItemReducer.ts","components/Messages/MessageItem/YourMessage/YourMessage.tsx","components/Messages/MessageItem/NotYourMessage/NotYourMessage.tsx","components/Common/FormsControls/FormsControls.tsx","components/Utils/Validators/validators.ts","components/Messages/MessageItem/AddMessageForm.tsx","components/Messages/MessageItem/MessageItem.tsx","components/Messages/MessageItem/MessageItemContainer.tsx","components/Messages/Messages.tsx","components/Messages/MessagesContainer.tsx","components/Common/Preloader/Preloader.tsx","components/FindFriends/FindFriedItem/FindFriendItem.tsx","components/Common/Paginator/Paginator.tsx","components/FindFriends/FindFriends.tsx","components/FindFriends/FindFriendsContainer.tsx","redux/profileReducer.ts","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/AddNewPostForm.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/ProfileInfo/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","components/Header/Header.tsx","redux/authReducer.ts","components/Header/HeaderContainer.tsx","components/Login/LoginForm.tsx","components/Login/Login.tsx","redux/appReducer.ts","redux/redux-store.ts","components/Settings/ProfileSettings.tsx","components/Settings/ProfileSettingsForm.tsx","components/Settings/Settings.tsx","components/Settings/SettingsContainer.tsx","App.tsx","index.tsx","components/Login/Login.module.css","components/Common/FormsControls/FormsControls.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Header/Header.module.css","components/Messages/MessageItem/NotYourMessage/NotYourMessage.module.css","components/Messages/DialogItem/DialogItem.module.css","components/Messages/MessageItem/YourMessage/YourMessage.module.css","components/Common/Paginator/Paginator.module.css","components/Settings/Settings.module.css","components/Messages/MessageItem/MessageItem.module.css","components/Profile/MyPosts/MyPosts.module.css","components/FindFriends/FindFriends.module.css","components/Messages/Messages.module.css","components/Profile/Profile.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","Nav","className","obj","nav","item","to","activeClassName","activeLink","link","FriendItem","props","friend_item_container","img_wrapper","ava","src","users","photos","small","process","alt","info_wrapper","name","to_messages","follow_wrapper","followed","disabled","followingInProgress","some","id","onClick","unFollowThunkCreator","unfollow_btn","Friends","friends_container","friends_list","filter","u","map","t","key","follow","unfollow","setFollowingInProgress","isFollowingInProgress","followThunkCreator","mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","React","connect","axiosInstance","axios","create","baseURL","withCredentials","headers","friendsAPI","currentPage","pageSize","get","then","response","data","userId","post","delete","profileAPI","status","put","file","formData","FormData","append","profile","authAPI","email","password","rememberMe","captcha","securityAPI","initialState","newPostText","totalUsersCount","isFetching","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","SET_PRELOADER","SET_IS_FOLLOWING_IN_PROGRESS","followAC","type","unfollowAC","setCurrentPageAC","setPreloaderAC","setFollowingInProgressAC","dispatch","getState","a","resultCode","friendsReducer","action","getUsersSelector","createSelector","findFriendsPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getIsFollowingInProgress","getFollowingInProgress","compose","DialogItem","path","user_id","dialog_item","active","img_container","friend_img","name_container","friend_name","user_name","text","dialogsData","messagesData","messageText","newMessageBody","SEND_MESSAGE","messagesItemReducer","body","YourMessage","yourMessageItem","messagesPage","message_container","message_body","message_wrapper","message_text","time_wrapper","time","NotYourMessage","image","PostTextarea","input","meta","hasError","value","error","style","post_textarea","input_error","MessagesTextarea","messages_textarea","messages_input_error","LoginInput","touched","login_input","login_error_text","ProfileSettingsInput","required","maxLengthCreator","maxLength","length","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","input_container","Field","component","validate","placeholder","send_btn","MessageItem","message_side_container","message_item","values","sendMessageClick","MessageItemContainer","sendMessageBodyActionCreator","Messages","messages_container","dialogs_items","dialogElements","messages_items","MessagesContainer","Preloader","preloader","FindFriendItem","info_grid","follow_btn","Paginator","pagesCount","Math","ceil","pages","i","push","portionCount","portionSize","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","back_btn","aria-hidden","pages_wrapper","p","pageNumber","page","current_page_is_active","onPageChanged","next_btn","FindFriends","preloader_wrapper","footer_wrapper","FindFriendsAPIContainer","setCurrentPage","getUsersThunkCreator","items","totalCount","postData","v1","message","like","ADD_POST","REMOVE_POST","SET_USER_PROFILE","SET_STATUS","SAVE_PHOTO_SUCCESS","getProfileInfoThunkCreator","setStatusAC","getStatusThunkCreator","updateStatusThunkCreator","savePhotoThunkCreator","profileReducer","postDataPushItem","el","postId","Post","old_posts","old_post_item","old_post_form","readOnly","textarea","rows","cols","buttons_wrapper","extra_wrapper","removePost","remove_button","AddNewPostFormRedux","new_post_form","new_post_button","MyPosts","memo","postElements","posts","new_post","addPost","MyPostsContainer","profilePage","addPostActionCreator","removePostActionCreator","ProfileStatus","editMode","activateActiveMode","setState","deactivateActiveMode","updateStatus","onStatusChange","e","currentTarget","onChange","autoFocus","onBlur","status_text","onDoubleClick","ProfileInfo","data_wrapper","ava_wrapper","large","data_header","fullName","replace","toUpperCase","data_items","job_status","lookingForAJob","job_description","lookingForAJobDescription","contacts","twitter","Profile","params","parseInt","content","isOwner","savePhoto","ProfileContainer","authorizedUserId","toString","getProfileInfo","getStatus","refreshProfile","prevProps","prevState","snapshot","withRouter","Header","header","wrap","logo","logo_link","logo_img","login","auth_wrapper","userData","logout_btn","logout","login_link","captchaUrl","SET_AUTH_USER_DATA","GET_CAPTCHA_URL_SUCCESS","setAuthUserDataAC","getAuthInfoThunkCreator","logoutThunkCreator","getCaptchaUrlThunkCreator","url","authReducer","HeaderContainer","LoginForm","form_header","fields","remember","captcha_wrapper","login_btn_wrapper","login_btn","LoginReduxForm","messages","stopSubmit","_error","loginThunkCreator","login_wrapper","initialized","INITIALIZED_SUCCESS","initializeAppThunkCreator","promise","Promise","all","appReducer","rootReducer","combineReducers","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","ProfileSettings","profile_settings_area","profile_settings","aboutMe","facebook","github","instagram","mainLink","vk","website","youtube","edit_btn","setEditMode","ProfileSettingsReduxForm","choose_img","target","files","Settings","settings_container","saveProfile","initialValues","SettingsContainer","refreshSettings","reject","saveProfileThunkCreator","App","initializeApp","exact","render","FriendsContainer","FindFriendsContainer","AppContainer","Chatter","StrictMode","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.d288415c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends_container\":\"Friends_friends_container__1bW7t\",\"friends_list\":\"Friends_friends_list__1Uxlm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ProfileStatus_input__2fMFg\",\"status_text\":\"ProfileStatus_status_text__3vCdq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__2Z5Hu\",\"item\":\"Nav_item__3CUye\",\"link\":\"Nav_link__dD6Jy\",\"activeLink\":\"Nav_activeLink__pzyjw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__Em0s3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend_item_container\":\"FindFriendItem_friend_item_container__1UPih\",\"info_grid\":\"FindFriendItem_info_grid__3ClYp\",\"info_wrapper\":\"FindFriendItem_info_wrapper__ySg2_\",\"underline\":\"FindFriendItem_underline__3Op44\",\"img_wrapper\":\"FindFriendItem_img_wrapper__2awzD\",\"ava\":\"FindFriendItem_ava__1og_v\",\"name\":\"FindFriendItem_name__2XHV8\",\"status\":\"FindFriendItem_status__1yQBO\",\"link\":\"FindFriendItem_link__3_5ID\",\"age\":\"FindFriendItem_age__KzX81\",\"follow_wrapper\":\"FindFriendItem_follow_wrapper__2DYDU\",\"location\":\"FindFriendItem_location__VyL1u\",\"follow_btn\":\"FindFriendItem_follow_btn__28vV8\",\"unfollow_btn\":\"FindFriendItem_unfollow_btn__3o3TA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend_item_container\":\"FriendItem_friend_item_container__2fEW9\",\"info_wrapper\":\"FriendItem_info_wrapper__3tAz2\",\"underline\":\"FriendItem_underline__3GQZn\",\"img_wrapper\":\"FriendItem_img_wrapper__B8Zt9\",\"ava\":\"FriendItem_ava__3bQUW\",\"name\":\"FriendItem_name__3tURL\",\"to_messages\":\"FriendItem_to_messages__1gwoZ\",\"link\":\"FriendItem_link__3LH9W\",\"follow_wrapper\":\"FriendItem_follow_wrapper__2izP8\",\"unfollow_btn\":\"FriendItem_unfollow_btn__3wId3\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport obj from './Nav.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nfunction Nav() {\r\n    return (\r\n        <nav className={obj.nav}>\r\n            <div className={obj.item}><NavLink to='/profile' activeClassName={obj.activeLink} className={obj.link}>Profile</NavLink></div>\r\n            <div className={obj.item}><NavLink to='/friends' activeClassName={obj.activeLink} className={obj.link}>Friends</NavLink></div>\r\n            <div className={obj.item}><NavLink to='/messages' activeClassName={obj.activeLink} className={obj.link}>Messages</NavLink></div>\r\n            <div className={obj.item}><NavLink to='/settings' activeClassName={obj.activeLink} className={obj.link}>Settings</NavLink></div>\r\n            <div className={obj.item}><NavLink to='/findFriends' activeClassName={obj.activeLink} className={obj.link}>Find Friends</NavLink></div>\r\n        </nav>\r\n    );\r\n}\r\n\r\n\r\nexport default Nav;","import React from 'react';\r\nimport obj from './FriendItem.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {UsersArrayType} from \"../../../redux/friendsReducer\";\r\n\r\ntype PhotosType = {\r\n    small: string\r\n    large: string\r\n}\r\n\r\n\r\ntype FriendItemPropsType = {\r\n    users: UsersArrayType\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    setFollowingInProgress: (isFollowingInProgress: boolean, userId: number) => void\r\n    isFollowingInProgress: boolean\r\n    followingInProgress: Array<number>\r\n    followThunkCreator:(userId:number)=>void\r\n    unFollowThunkCreator:(userId:number)=>void\r\n}\r\n\r\n\r\nfunction FriendItem(props: FriendItemPropsType) {\r\n\r\n    const onUnfollow = () => {\r\n        props.unFollowThunkCreator(props.users.id);\r\n    }\r\n\r\n    return (\r\n        <div className={obj.friend_item_container}>\r\n            <div className={obj.img_wrapper}>\r\n                <NavLink to='#' className={obj.link}>\r\n                    <img className={obj.ava}\r\n                         src={props.users.photos.small !== null ? process.env.PUBLIC_URL+props.users.photos.small : process.env.PUBLIC_URL+'/img/default.png'}\r\n                         alt='Avatar'/>\r\n                </NavLink>\r\n            </div>\r\n            <div className={obj.info_wrapper}>\r\n                <div className={obj.name}>\r\n                    <NavLink to=\"#\" className={obj.link}>\r\n                        <h2>{props.users.name}</h2>\r\n                    </NavLink>\r\n                </div>\r\n                <p className={obj.to_messages}><NavLink to='#' className={obj.link}>Write message\r\n                </NavLink></p>\r\n\r\n            </div>\r\n            <div className={obj.follow_wrapper}>\r\n                {/*<p className={obj.location}>{`${props.users.location.city}, ${props.users.location.country}`}</p>*/}\r\n\r\n                {props.users.followed ?\r\n                    <button\r\n                        disabled={props.followingInProgress.some(id => id === props.users.id)}\r\n                        onClick={onUnfollow}\r\n                        className={obj.unfollow_btn}>Unfollow\r\n                    </button>\r\n                    :\r\n                    ''\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FriendItem;","import React from 'react';\r\nimport obj from './Friends.module.css';\r\nimport {UsersArrayType} from \"../../redux/friendsReducer\";\r\nimport FriendItem from \"./FriendItem/FriendItem\";\r\n\r\n\r\ntype FriendsPropsType = {\r\n    users: Array<UsersArrayType>\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    setFollowingInProgress: (isFollowingInProgress: boolean, userId: number) => void\r\n    isFollowingInProgress: boolean\r\n    followingInProgress: Array<number>\r\n    followThunkCreator: (userId: number) => void\r\n    unFollowThunkCreator: (userId: number) => void\r\n}\r\n\r\nfunction Friends(props: FriendsPropsType) {\r\n\r\n    return (\r\n        <div className={obj.friends_container}>\r\n            <div className={obj.friends_list}>\r\n\r\n\r\n\r\n                {props.users.filter(u => u.followed).map((t: UsersArrayType) => {\r\n                    return (\r\n                        <FriendItem\r\n                            key={t.id}\r\n                            users={t}\r\n                            follow={props.follow}\r\n                            unfollow={props.unfollow}\r\n                            setFollowingInProgress={props.setFollowingInProgress}\r\n                            isFollowingInProgress={props.isFollowingInProgress}\r\n                            followingInProgress={props.followingInProgress}\r\n                            followThunkCreator={props.followThunkCreator}\r\n                            unFollowThunkCreator={props.unFollowThunkCreator}\r\n                        />\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Friends;","import React from 'react';\r\nimport {Redirect} from \"react-router\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootState} from \"../../redux/redux-store\";\r\n\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: RootState): MapStatePropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component: any) => {\r\n    class RedirectComponent extends React.Component<any, any> {\r\n        render() {\r\n            if (!this.props.isAuth) {\r\n                return <Redirect to={'/login'}/>\r\n            }\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedRedirectComponent = connect<MapStatePropsType, {}, {}, RootState>\r\n    (mapStateToProps, {})(RedirectComponent);\r\n\r\n\r\n    return ConnectedRedirectComponent\r\n}\r\n\r\n\r\n","import axios from \"axios\";\r\nimport {UsersArrayType} from \"../redux/friendsReducer\";\r\nimport {ProfileType} from \"../redux/profileReducer\";\r\n\r\n\r\nconst axiosInstance = axios.create(\r\n    {\r\n        baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n        withCredentials: true,\r\n        headers: {'API-KEY': '3de0712e-e19a-4637-bf5e-355c7a8ad46c'}\r\n    },\r\n);\r\n\r\n\r\ntype GetUsersResponseType = {\r\n    items: Array<UsersArrayType>\r\n    totalCount: number\r\n    error: string\r\n}\r\ntype FollowResponseType = {\r\n    resultCode: number\r\n    messages: Array<string>\r\n    data: {}\r\n}\r\n\r\nexport const friendsAPI = {\r\n    getUsers(currentPage: number, pageSize: number) {\r\n        debugger\r\n        return (\r\n            axiosInstance.get<GetUsersResponseType>(`users?page=${currentPage}&count=${pageSize}`)\r\n                .then(response => response.data)\r\n\r\n        )\r\n    },\r\n    follow(userId: number) {\r\n        return (\r\n            axiosInstance.post<FollowResponseType>(`follow/${userId}`)\r\n        )\r\n    },\r\n    unFollow(userId: number) {\r\n        return (\r\n            axiosInstance.delete<FollowResponseType>(`follow/${userId}`)\r\n        )\r\n    },\r\n}\r\n\r\n\r\ntype GetProfileResponseType = {\r\n    userId: number\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    fullName: string\r\n    contacts: {\r\n        github: string\r\n        vk: string\r\n        facebook: string\r\n        instagram: string\r\n        twitter: string\r\n        website: string\r\n        youtube: string\r\n        mainLink: string\r\n    }\r\n    photos: {\r\n        small: string | null\r\n        large: string | null\r\n    }\r\n\r\n}\r\nexport const profileAPI = {\r\n    getProfileInfo(userId: string) {\r\n        return (\r\n            axiosInstance.get<GetProfileResponseType>(`profile/${userId}`)\r\n        )\r\n    },\r\n    getStatus(userId: number) {\r\n        return (\r\n            axiosInstance.get<string>(`profile/status/${userId}`)\r\n        )\r\n    },\r\n    updateStatus(status: string) {\r\n        return (\r\n            axiosInstance.put(`profile/status/`, {status: status})\r\n        )\r\n    },\r\n    savePhoto(file: any) {\r\n        const formData = new FormData();\r\n        formData.append('image', file)\r\n        return (\r\n            axiosInstance.put(`profile/photo/`, formData, {headers: {'Content-Type': 'multipart/form-data'}})\r\n        )\r\n    },\r\n    saveProfile(profile: ProfileType) {\r\n        return (\r\n            axiosInstance.put(`profile`, profile)\r\n        )\r\n    },\r\n}\r\n\r\n\r\ntype GetAuthInfoResponseType = {\r\n    data: { id: number, email: string, login: string }\r\n    resultCode: number\r\n    messages: Array<string>\r\n}\r\nexport const authAPI = {\r\n    getAuthInfo() {\r\n        return (\r\n            axiosInstance.get<GetAuthInfoResponseType>(`auth/me`)\r\n        )\r\n    },\r\n    login(email: string, password: string, rememberMe = false, captcha: string | undefined | null = null) {\r\n        return (\r\n            axiosInstance.post(`auth/login`, {email, password, rememberMe, captcha})\r\n        )\r\n    },\r\n    logout() {\r\n        return (\r\n            axiosInstance.delete(`auth/login`)\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return (\r\n            axiosInstance.get<{ url: string }>(`security/get-captcha-url`)\r\n        )\r\n    },\r\n}\r\n\r\n\r\n","import {friendsAPI} from \"../API/API\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {RootState} from \"./redux-store\";\r\n\r\ntype initialStateType = typeof initialState\r\n\r\n\r\nexport type PhotosType = {\r\n    small: string\r\n    large: string\r\n}\r\nexport type UsersArrayType = {\r\n    id: number\r\n    name: string\r\n    uniqueUrlName: string\r\n    photos: PhotosType\r\n    status: string\r\n    followed: boolean\r\n}\r\n\r\nlet initialState = {\r\n    users: <UsersArrayType[]>[],\r\n    newPostText: '',\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: <number[]>[],\r\n    isFollowingInProgress: false,\r\n}\r\n\r\nexport type FriendsReducerActionTypes =\r\n    FollowACType\r\n    | UnfollowACType\r\n    | SetUsersACTYPE\r\n    | SetCurrentPageACTYPE\r\n    | SetTotalUsersCountACType\r\n    | SetPreloaderACType\r\n    | SetFollowingInProgressACType;\r\nconst friendsReducer = (state: initialStateType = initialState, action: FriendsReducerActionTypes): initialStateType => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: state.users.map((u) => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u\r\n                })\r\n            };\r\n        }\r\n        case UNFOLLOW: {\r\n            return {\r\n                ...state, users: state.users.map((u) => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u\r\n                })\r\n            };\r\n        }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.totalUsersCount}\r\n        }\r\n        case SET_PRELOADER: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case SET_IS_FOLLOWING_IN_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFollowingInProgress ?\r\n                    [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type FollowACType = {\r\n    type: typeof FOLLOW\r\n    userId: number\r\n}\r\nexport type UnfollowACType = {\r\n    type: typeof UNFOLLOW\r\n    userId: number\r\n}\r\nexport type SetUsersACTYPE = {\r\n    type: typeof SET_USERS\r\n    users: Array<UsersArrayType>\r\n}\r\nexport type SetCurrentPageACTYPE = {\r\n    type: typeof SET_CURRENT_PAGE\r\n    currentPage: number\r\n}\r\n\r\nexport type SetTotalUsersCountACType = {\r\n    type: typeof SET_TOTAL_USERS_COUNT\r\n    totalUsersCount: number\r\n}\r\nexport type SetPreloaderACType = {\r\n    type: typeof SET_PRELOADER\r\n    isFetching: boolean\r\n}\r\nexport type SetFollowingInProgressACType = {\r\n    type: typeof SET_IS_FOLLOWING_IN_PROGRESS\r\n    isFollowingInProgress: boolean\r\n    userId: number\r\n}\r\n\r\nexport type getUsersThunkCreator = {}\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst SET_PRELOADER = 'SET_PRELOADER';\r\nconst SET_IS_FOLLOWING_IN_PROGRESS = 'SET_IS_FOLLOWING_IN_PROGRESS';\r\n\r\nexport const followAC = (userId: number): FollowACType => ({type: FOLLOW, userId});\r\nexport const unfollowAC = (userId: number): UnfollowACType => ({type: UNFOLLOW, userId});\r\nexport const setUsersAC = (users: Array<UsersArrayType>): SetUsersACTYPE => ({type: SET_USERS, users});\r\nexport const setCurrentPageAC = (currentPage: number): SetCurrentPageACTYPE => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCountAC = (totalUsersCount: number): SetTotalUsersCountACType => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    totalUsersCount\r\n});\r\nexport const setPreloaderAC = (isFetching: boolean): SetPreloaderACType => ({type: SET_PRELOADER, isFetching});\r\n\r\nexport const setFollowingInProgressAC =\r\n    (isFollowingInProgress: boolean,\r\n     userId: number): SetFollowingInProgressACType => ({\r\n        type: SET_IS_FOLLOWING_IN_PROGRESS,\r\n        isFollowingInProgress,\r\n        userId,\r\n    });\r\n\r\n\r\nexport const getUsersThunkCreator = (currentPage: number, pageSize: number)\r\n    : ThunkAction<void, RootState, unknown, FriendsReducerActionTypes> => {\r\n    return (\r\n        async (dispatch, getState) => {\r\n            dispatch(setPreloaderAC(true));\r\n            dispatch(setCurrentPageAC(currentPage));\r\n            const data = await friendsAPI.getUsers(currentPage, pageSize)\r\n            dispatch(setPreloaderAC(false));\r\n            dispatch(setUsersAC(data.items));\r\n            dispatch(setTotalUsersCountAC(data.totalCount));\r\n        }\r\n    )\r\n}\r\n\r\n\r\nexport const followThunkCreator = (userId: number)\r\n    : ThunkAction<void, RootState, unknown, FriendsReducerActionTypes> => {\r\n    return (\r\n        async (dispatch, getState) => {\r\n            dispatch(setFollowingInProgressAC(true, userId));\r\n            const response = await friendsAPI.follow(userId)\r\n            if (response.data.resultCode == 0) {\r\n                dispatch(followAC(userId));\r\n            }\r\n            dispatch(setFollowingInProgressAC(false, userId));\r\n        }\r\n    )\r\n}\r\n\r\nexport const unFollowThunkCreator = (userId: number)\r\n    : ThunkAction<void, RootState, unknown, FriendsReducerActionTypes> => {\r\n    return (\r\n        (dispatch, getState) => {\r\n            dispatch(setFollowingInProgressAC(true, userId));\r\n            friendsAPI.unFollow(userId)\r\n                .then(response => {\r\n                    if (response.data.resultCode == 0) {\r\n                        dispatch(unfollowAC(userId));\r\n                    }\r\n                    dispatch(setFollowingInProgressAC(false, userId));\r\n                })\r\n        }\r\n    )\r\n}\r\n\r\nexport default friendsReducer;","import {createSelector} from \"reselect\";\r\n\r\n\r\nconst getUsers = (state: any) => {\r\n    return state.findFriendsPage.users\r\n}\r\n\r\nexport const getUsersSelector = createSelector(getUsers, (users: any) => {\r\n    return users\r\n})\r\n\r\n\r\nexport const getPageSize = (state: any) => {\r\n    return state.findFriendsPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state: any) => {\r\n    return state.findFriendsPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state: any) => {\r\n    return state.findFriendsPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state: any) => {\r\n    return state.findFriendsPage.isFetching\r\n}\r\n\r\nexport const getIsFollowingInProgress = (state: any) => {\r\n    return state.findFriendsPage.isFollowingInProgress\r\n}\r\n\r\nexport const getFollowingInProgress = (state: any) => {\r\n    return state.findFriendsPage.followingInProgress\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {RootState} from \"../../redux/redux-store\";\r\nimport Friends from \"./Friends\";\r\nimport {withAuthRedirect} from \"../Hoc/withAuthRedirect\";\r\nimport {\r\n    followAC,\r\n    followThunkCreator,\r\n    FriendsReducerActionTypes,\r\n    unfollowAC,\r\n    unFollowThunkCreator,\r\n    UsersArrayType\r\n} from \"../../redux/friendsReducer\";\r\nimport {getFollowingInProgress, getIsFollowingInProgress} from \"../../redux/usersSelectors\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\n\r\n\r\ntype MapStatePropsType = {\r\n    users: Array<UsersArrayType>\r\n    isAuth: boolean\r\n    isFollowingInProgress: boolean\r\n    followingInProgress: Array<number>\r\n}\r\n\r\nexport type MapDispatchPropsType = {\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    followThunkCreator: (userId: number) => void\r\n    unFollowThunkCreator: (userId: number) => void\r\n}\r\n\r\nlet mapStateToProps = (state: RootState): MapStatePropsType => {\r\n    return {\r\n        users: state.findFriendsPage.users,\r\n        isAuth: state.auth.isAuth,\r\n        isFollowingInProgress: getIsFollowingInProgress(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: ThunkDispatch<RootState, unknown, FriendsReducerActionTypes>)\r\n    : MapDispatchPropsType => {\r\n    return {\r\n        follow: (userId) => {\r\n            dispatch(followAC(userId))\r\n        },\r\n        unfollow: (userId) => {\r\n            dispatch(unfollowAC(userId))\r\n        },\r\n        followThunkCreator: (userId) => {\r\n            dispatch(followThunkCreator(userId))\r\n        },\r\n        unFollowThunkCreator: (userId) => {\r\n            dispatch(unFollowThunkCreator(userId))\r\n        },\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect<MapStatePropsType, MapDispatchPropsType, {}, RootState>(mapStateToProps, mapDispatchToProps),\r\n)(Friends)\r\n\r\n//without compose\r\n// let AuthRedirectComponent = withAuthRedirect(Friends);\r\n// let FriendsContainer = connect<MapStatePropsType, {}, {}, RootState>(mapStateToProps, {})(AuthRedirectComponent);\r\n// export default FriendsContainer;","import React from 'react';\r\nimport obj from './DialogItem.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n\r\ntype DialogPropsType = {\r\n    user_id: number\r\n    user_name: string\r\n}\r\n\r\nfunction DialogItem(props: DialogPropsType) {\r\n    let path = '/messages/' + props.user_id;\r\n    return <div className={obj.dialog_item + ' ' + obj.active}>\r\n        <div className={obj.img_container}>\r\n            <NavLink to={'#'}>\r\n                <img className={obj.friend_img} src={process.env.PUBLIC_URL + '/img/friend_images/Bezos.png'} alt=''/>\r\n            </NavLink>\r\n        </div>\r\n        <div className={obj.name_container}>\r\n            <NavLink className={obj.friend_name} to={'#'}>{props.user_name}</NavLink>\r\n            <NavLink className={obj.text} to={path}>Go to Dialog</NavLink>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\nexport default DialogItem;","export type DialogsDataArray = {\r\n    id: number\r\n    name: string\r\n}\r\nexport type MessagesDataArray = {\r\n    id: number\r\n    messageText: string\r\n}\r\n\r\nexport type InitialStateType = typeof initialState;\r\n\r\nlet initialState = {\r\n    dialogsData: [\r\n        {id: 1, name: 'Jeff Bezos'},\r\n        {id: 2, name: 'Elon Musk'},\r\n        {id: 3, name: 'Jordan Peterson'},\r\n        {id: 4, name: 'Mark Zuckerberg'},\r\n        {id: 5, name: 'Thomas Yorke'},\r\n\r\n    ] as Array<DialogsDataArray>,\r\n    messagesData: [\r\n        {id: 1, messageText: 'I\\'m fine. How\\'re you?'},\r\n        {id: 2, messageText: 'Hellooooooooooooooooooooooooooooooooooooooooo'},\r\n        {id: 3, messageText: 'Byeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee'},\r\n\r\n    ] as Array<MessagesDataArray>,\r\n    newMessageBody: '',\r\n}\r\n\r\nexport type MessagesReducerActionTypes =  SendMessageBodyActionCreatorType\r\n\r\nconst messagesItemReducer = (state: InitialStateType = initialState, action: MessagesReducerActionTypes): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case SEND_MESSAGE: {\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                // newMessageBody: '',\r\n                messagesData: [...state.messagesData, {id: 4, messageText: body}],\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport type SendMessageBodyActionCreatorType = {\r\n    type: typeof SEND_MESSAGE,\r\n    newMessageBody:string\r\n}\r\n\r\nconst SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nexport const sendMessageBodyActionCreator = (newMessageBody:string): SendMessageBodyActionCreatorType => ({type: SEND_MESSAGE,newMessageBody});\r\n\r\n\r\nexport default messagesItemReducer;","import React from 'react';\r\nimport obj from './YourMessage.module.css';\r\nimport {MessagesPageType} from \"../MessageItem\";\r\nimport {MessagesDataArray} from \"../../../../redux/messagesItemReducer\";\r\n\r\n\r\n\r\ntype YourMessagePropsType = {\r\n    messagesPage: MessagesPageType\r\n}\r\n\r\nfunction YourMessage(props: YourMessagePropsType) {\r\n\r\n    const yourMessageItem = props.messagesPage.messagesData.map((t: MessagesDataArray) => {\r\n        return (\r\n            <div key={t.id} className={obj.message_container}>\r\n\r\n                <div className={obj.message_body}>\r\n                    <h4>I'm</h4>\r\n\r\n                    <div className={obj.message_wrapper}>\r\n                        <p className={obj.message_text}>{t.messageText}</p>\r\n                    </div>\r\n\r\n                    <div className={obj.time_wrapper}>\r\n                        <p className={obj.time}>20:00</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    })\r\n    return (\r\n        <>\r\n            {yourMessageItem}\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default YourMessage;","import React from 'react';\r\nimport obj from './NotYourMessage.module.css';\r\n\r\nfunction NotYourMessage() {\r\n\r\n    const name = 'Boris Berezovskiy';\r\n    const message_text = 'Hey, how you doing?'\r\n    const time = '20:00';\r\n    return (\r\n        <div className={obj.message_container}>\r\n            <div className={obj.img_wrapper}>\r\n                <img className={obj.image} src={process.env.PUBLIC_URL+'/img/avatar.png'} alt='img'/>\r\n            </div>\r\n            <div className={obj.message_body}>\r\n                <h4>{name}</h4>\r\n\r\n                <div className={obj.message_wrapper}>\r\n                    <p className={obj.message_text}>{message_text}</p>\r\n                </div>\r\n\r\n                <div className={obj.time_wrapper}>\r\n                    <p className={obj.time}>{time}</p>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default NotYourMessage;","import React from 'react'\r\nimport style from './FormsControls.module.css'\r\n\r\nexport const PostTextarea = ({input, meta, ...props}: any) => {\r\n    const hasError = input.value && meta.error;\r\n    return (\r\n        <>\r\n            <textarea\r\n                className={style.post_textarea + ' ' + (hasError && style.input_error)}\r\n                {...input} {...props}\r\n                value={props.newPostText}\r\n\r\n            />\r\n            {hasError && <span>{meta.error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport const MessagesTextarea = ({input, meta, ...props}: any) => {\r\n    const hasError = input.value && meta.error;\r\n    return (\r\n        <>\r\n            <textarea\r\n                className={style.messages_textarea + ' ' + (hasError && style.messages_input_error)}\r\n                {...input} {...props}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport const LoginInput = ({input, meta, ...props}: any) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <>\r\n            <input\r\n                className={style.login_input + ' ' + (hasError && style.input_error)}\r\n                {...input} {...props}\r\n            />\r\n            {hasError && <span className={style.login_error_text}>{meta.error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport const ProfileSettingsInput = ({input, meta, ...props}: any) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <>\r\n            <input\r\n                className={style.login_input + ' ' + (hasError && style.input_error)}\r\n                {...input} {...props}\r\n            />\r\n            {hasError && <span className={style.login_error_text}>{meta.error}</span>}\r\n        </>\r\n    )\r\n}","import React from 'react'\r\n\r\n\r\nexport const required = (value: string) => {\r\n    if (value) {\r\n        return undefined\r\n    } else {\r\n        return 'Field is required'\r\n    }\r\n}\r\n\r\n\r\nexport const maxLengthCreator = (maxLength:number) =>(value: string)=> {\r\n    if (value && value.length > maxLength) {\r\n        return `Field length cannot be more than ${maxLength} symbols`\r\n    } else {\r\n        return undefined\r\n    }\r\n}","import React from 'react';\r\nimport obj from \"./MessageItem.module.css\";\r\nimport {Field} from \"redux-form\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {MessagesTextarea} from \"../../Common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../Utils/Validators/validators\";\r\n\r\nconst maxLength = maxLengthCreator(10)\r\n\r\nexport function AddMessageForm(props: any) {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={obj.input_container}>\r\n            <Field component={MessagesTextarea}\r\n                   validate={[required, maxLength]}\r\n                   name='newMessageBody'\r\n                   placeholder={'Write a message...'}/>\r\n            <button className={obj.send_btn}> Send</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport const AddMessageFormRedux = reduxForm({form: 'AddMessageForm'})(AddMessageForm)","import React, {ChangeEvent} from 'react';\r\nimport obj from './MessageItem.module.css';\r\nimport YourMessage from './YourMessage/YourMessage';\r\nimport NotYourMessage from './NotYourMessage/NotYourMessage';\r\nimport {DialogsDataArray, MessagesDataArray} from \"../../../redux/messagesItemReducer\";\r\nimport {AddMessageFormRedux} from \"./AddMessageForm\";\r\n\r\nexport type MessagesPageType = {\r\n    dialogsData: Array<DialogsDataArray>\r\n    messagesData: Array<MessagesDataArray>\r\n    newMessageBody: string\r\n}\r\n\r\ntype MessageItemPropsType = {\r\n    messagesPage: MessagesPageType\r\n    sendMessageClick: (newMessageBody: string) => void\r\n}\r\n\r\nfunction MessageItem(props: MessageItemPropsType) {\r\n\r\n\r\n    let addNewMessage = (values: any) => {\r\n        props.sendMessageClick(values.newMessageBody);\r\n    }\r\n    return (\r\n        <div className={obj.message_side_container}>\r\n            <div className={obj.message_item}>\r\n                <NotYourMessage/>\r\n                <YourMessage messagesPage={props.messagesPage}/>\r\n            </div>\r\n\r\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default MessageItem;","import React, {Dispatch} from 'react';\r\nimport {\r\n    DialogsDataArray, MessagesDataArray,\r\n    MessagesReducerActionTypes,\r\n    sendMessageBodyActionCreator,\r\n} from \"../../../redux/messagesItemReducer\";\r\nimport MessageItem from \"./MessageItem\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootState} from \"../../../redux/redux-store\";\r\n\r\n\r\ntype MapStatePropsType = {\r\n    messagesPage: {\r\n        dialogsData: Array<DialogsDataArray>\r\n        messagesData: Array<MessagesDataArray>\r\n        newMessageBody: string\r\n    }\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    sendMessageClick: (newMessageBody:string) => void\r\n}\r\n\r\nlet mapStateToProps = (state: RootState): MapStatePropsType => {\r\n    return {\r\n        messagesPage: state.messagesPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: Dispatch<MessagesReducerActionTypes>): MapDispatchPropsType => {\r\n    return {\r\n        sendMessageClick: (newMessageBody:string) => {\r\n            dispatch(sendMessageBodyActionCreator(newMessageBody));\r\n        },\r\n    }\r\n};\r\nlet MessageItemContainer =\r\n    connect<MapStatePropsType, MapDispatchPropsType, {}, RootState>(mapStateToProps, mapDispatchToProps)(MessageItem);\r\n\r\n\r\nexport default MessageItemContainer;","import React from 'react';\r\nimport obj from './Messages.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport MessageItemContainer from \"./MessageItem/MessageItemContainer\";\r\nimport {DialogsDataArray} from \"../../redux/messagesItemReducer\";\r\nimport {MapStatePropsType} from \"./MessagesContainer\";\r\n\r\n\r\n\r\n\r\nfunction Messages(props: MapStatePropsType) {\r\n\r\n    return (\r\n        <div className={obj.messages_container}>\r\n            <div className={obj.dialogs_items}>\r\n                {props.dialogElements.map((t: DialogsDataArray) => {\r\n                    return <DialogItem key={t.id} user_name={t.name} user_id={t.id}/>\r\n                })}\r\n            </div>\r\n            <div className={obj.messages_items}>\r\n                <MessageItemContainer/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Messages;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {RootState} from \"../../redux/redux-store\";\r\nimport Messages from \"./Messages\";\r\nimport {DialogsDataArray} from \"../../redux/messagesItemReducer\";\r\nimport {withAuthRedirect} from \"../Hoc/withAuthRedirect\";\r\n\r\n\r\nexport type MapStatePropsType = {\r\n    dialogElements: Array<DialogsDataArray>\r\n}\r\n\r\nlet mapStateToProps = (state: RootState): MapStatePropsType => {\r\n    return {\r\n        dialogElements: state.messagesPage.dialogsData,\r\n    }\r\n}\r\n\r\n\r\nlet MessagesContainer = compose(\r\n    withAuthRedirect,\r\n    connect<MapStatePropsType, {}, {}, RootState>\r\n    (mapStateToProps, {}),\r\n)(Messages)\r\n\r\n// without compose\r\n// let AuthRedirectComponent = WithAuthRedirect(Messages);\r\n// let MessagesContainer = connect<MapStatePropsType, {}, {}, RootState>\r\n// (mapStateToProps, {})(AuthRedirectComponent);\r\n\r\n\r\nexport default MessagesContainer;","import React from 'react';\r\nimport obj from \"./Preloader.module.css\";\r\n\r\n\r\nfunction Preloader() {\r\n    return (\r\n        <>\r\n            <img className={obj.preloader} src={process.env.PUBLIC_URL + '/img/spinner.svg'}/>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Preloader;","import React from 'react';\r\nimport obj from './FindFriendItem.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\nimport { UsersArrayType} from \"../../../redux/friendsReducer\";\r\n\r\n\r\ntype FriendItemType = {\r\n    users: UsersArrayType\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    setFollowingInProgress: (isFollowingInProgress: boolean, userId: number) => void\r\n    isFollowingInProgress: boolean\r\n    followingInProgress: Array<number>\r\n    followThunkCreator:(userId:number)=>void\r\n    unFollowThunkCreator:(userId:number)=>void\r\n}\r\n\r\n\r\nfunction FindFriendItem(props: FriendItemType) {\r\n\r\n    const onFollow = () => {\r\n        props.followThunkCreator(props.users.id);\r\n    }\r\n    const onUnfollow = () => {\r\n        props.unFollowThunkCreator(props.users.id);\r\n    }\r\n    return (\r\n        <div className={obj.friend_item_container}>\r\n            <div className={obj.img_wrapper}>\r\n                <NavLink to={'/profile/' + props.users.id} className={obj.link}>\r\n                    <img className={obj.ava}\r\n                         src={props.users.photos.small ? props.users.photos.small : process.env.PUBLIC_URL + '/img/default.png'}\r\n                         alt='Avatar'/>\r\n                </NavLink>\r\n            </div>\r\n            <div className={obj.info_grid}>\r\n                <div className={obj.info_wrapper}>\r\n                    <div className={obj.name}>\r\n                        <NavLink to={'/profile/' + props.users.id} className={obj.link}>\r\n                            <h2>{`${props.users.name}`}</h2>\r\n                        </NavLink>\r\n                        {/*<p className={obj.age}>&nbsp; {`${props.users.age} years old`}</p>*/}\r\n                    </div>\r\n                    <p className={obj.status}>{props.users.status ? props.users.status : 'What\\'s cooking, good looking?'}</p>\r\n                </div>\r\n                <div className={obj.follow_wrapper}>\r\n                    {/*<p className={obj.location}>{`${props.users.location.city}, ${props.users.location.country}`}</p>*/}\r\n\r\n                    {props.users.followed ?\r\n                        <button\r\n                            disabled={props.followingInProgress.some(id => id === props.users.id)}\r\n                            onClick={onUnfollow}\r\n                            className={obj.unfollow_btn}>Unfollow\r\n                        </button>\r\n                        :\r\n                        <button\r\n                            disabled={props.followingInProgress.some(id => id === props.users.id)}\r\n                            onClick={onFollow}\r\n                            className={obj.follow_btn}>Follow\r\n                        </button>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FindFriendItem;","import React, {useState} from 'react';\r\nimport obj from './Paginator.module.css';\r\n\r\n\r\ntype PaginatorPropsType = {\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    portionSize: number\r\n}\r\n\r\nfunction Paginator(props: PaginatorPropsType) {\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    let pages: Array<number> = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / props.portionSize);\r\n    // for next/prev buttons disabling\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * props.portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * props.portionSize;\r\n\r\n    return (\r\n        <>\r\n            {\r\n                portionNumber > 1\r\n                &&\r\n                <button className={obj.back_btn}\r\n                        onClick={() => setPortionNumber(portionNumber - 1)}\r\n                >\r\n                    <i className=\"fa fa-angle-double-left\" aria-hidden=\"true\"/>\r\n                    &nbsp; Back\r\n                </button>\r\n            }\r\n\r\n            <span className={obj.pages_wrapper}>\r\n            {\r\n                pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                    .map((pageNumber: number) => {\r\n                            return (\r\n                                <span\r\n                                    className={props.currentPage === pageNumber ? `${obj.page} ${obj.current_page_is_active}` : obj.page}\r\n                                    key={pageNumber} onClick={() => props.onPageChanged(pageNumber)}\r\n                                >\r\n                                    {pageNumber}\r\n                                </span>\r\n                            )\r\n                        }\r\n                    )\r\n            }\r\n            </span>\r\n\r\n            {\r\n                portionCount > portionNumber\r\n                &&\r\n                <button className={obj.next_btn}\r\n                        onClick={() => setPortionNumber(portionNumber + 1)}\r\n                > Next &nbsp;\r\n                    <i className=\"fa fa-angle-double-right\" aria-hidden=\"true\"/>\r\n                </button>\r\n            }\r\n        </>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport obj from \"./FindFriends.module.css\";\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\nimport {UsersArrayType} from \"../../redux/friendsReducer\";\r\nimport FindFriendItem from \"./FindFriedItem/FindFriendItem\";\r\nimport Paginator from \"../Common/Paginator/Paginator\";\r\n\r\n\r\ntype FindFriendsPropsType = {\r\n    users: Array<UsersArrayType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    isFetching: boolean\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    setFollowingInProgress: (isFollowingInProgress: boolean, userId: number) => void\r\n    isFollowingInProgress: boolean\r\n    followingInProgress: Array<number>\r\n    followThunkCreator: (userId: number) => void\r\n    unFollowThunkCreator: (userId: number) => void\r\n}\r\n\r\n\r\nfunction FindFriends(props: FindFriendsPropsType) {\r\n\r\n    const portionSize=10;\r\n\r\n    return (\r\n\r\n        <div className={obj.friends_container}>\r\n            <div className={obj.friends_list}>\r\n\r\n                {\r\n                    props.isFetching ?\r\n                        <div className={obj.preloader_wrapper}>\r\n                            <Preloader/>\r\n                        </div>\r\n                        : null\r\n                }\r\n\r\n                {\r\n                    props.users.map((t: UsersArrayType) => {\r\n                        return (\r\n                            <FindFriendItem key={t.id}\r\n                                            users={t}\r\n                                            follow={props.follow}\r\n                                            unfollow={props.unfollow}\r\n                                            setFollowingInProgress={props.setFollowingInProgress}\r\n                                            isFollowingInProgress={props.isFollowingInProgress}\r\n                                            followingInProgress={props.followingInProgress}\r\n                                            followThunkCreator={props.followThunkCreator}\r\n                                            unFollowThunkCreator={props.unFollowThunkCreator}\r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n\r\n                <span className={obj.footer_wrapper}>\r\n                       <Paginator currentPage={props.currentPage} onPageChanged={props.onPageChanged}\r\n                                  pageSize={props.pageSize} totalUsersCount={props.totalUsersCount}\r\n                                  portionSize={portionSize}\r\n                       />\r\n                </span>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default FindFriends;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {RootState} from \"../../redux/redux-store\";\r\nimport {\r\n    followAC, followThunkCreator,\r\n    FriendsReducerActionTypes, getUsersThunkCreator,\r\n    setCurrentPageAC, setFollowingInProgressAC,\r\n    unfollowAC, unFollowThunkCreator,\r\n    UsersArrayType\r\n} from \"../../redux/friendsReducer\";\r\nimport FindFriends from \"./FindFriends\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {withAuthRedirect} from \"../Hoc/withAuthRedirect\";\r\nimport {\r\n    getCurrentPage, getFollowingInProgress,\r\n    getIsFetching,\r\n    getIsFollowingInProgress,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsersSelector\r\n} from \"../../redux/usersSelectors\";\r\n\r\n\r\nexport type MapStatePropsType = {\r\n    users: Array<UsersArrayType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    isFollowingInProgress: boolean\r\n    followingInProgress: Array<number>\r\n}\r\n\r\nexport type MapDispatchPropsType = {\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    setCurrentPage: (pageNumber: number) => void\r\n    setFollowingInProgress: (isFollowingInProgress: boolean, userId: number) => void\r\n    getUsersThunkCreator: (currentPage: number, pageSize: number) => void\r\n    followThunkCreator: (userId: number) => void\r\n    unFollowThunkCreator: (userId: number) => void\r\n}\r\n\r\nlet mapStateToProps = (state: RootState): MapStatePropsType => {\r\n    return {\r\n        users: getUsersSelector(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        isFollowingInProgress: getIsFollowingInProgress(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch: ThunkDispatch<RootState, unknown, FriendsReducerActionTypes>)\r\n    : MapDispatchPropsType => {\r\n    return {\r\n        follow: (userId) => {\r\n            dispatch(followAC(userId))\r\n        },\r\n        unfollow: (userId) => {\r\n            dispatch(unfollowAC(userId))\r\n        },\r\n        setCurrentPage: (pageNumber) => {\r\n            dispatch(setCurrentPageAC(pageNumber))\r\n        },\r\n        setFollowingInProgress: (isFollowingInProgress, userId) => {\r\n            dispatch(setFollowingInProgressAC(isFollowingInProgress, userId))\r\n        },\r\n        getUsersThunkCreator: (currentPage: number, pageSize: number) => {\r\n            dispatch(getUsersThunkCreator(currentPage, pageSize))\r\n        },\r\n        followThunkCreator: (userId) => {\r\n            dispatch(followThunkCreator(userId))\r\n        },\r\n        unFollowThunkCreator: (userId) => {\r\n            dispatch(unFollowThunkCreator(userId))\r\n        },\r\n    }\r\n}\r\n\r\n\r\nexport type FindFriendsAPIContainerPropsType = MapStatePropsType & MapDispatchPropsType;\r\n\r\nclass FindFriendsAPIContainer extends React.Component<FindFriendsAPIContainerPropsType, RootState> {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsersThunkCreator(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.setCurrentPage(pageNumber);\r\n        this.props.getUsersThunkCreator(pageNumber, this.props.pageSize);\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <FindFriends\r\n                users={this.props.users}\r\n                pageSize={this.props.pageSize}\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                isFetching={this.props.isFetching}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                setFollowingInProgress={this.props.setFollowingInProgress}\r\n                isFollowingInProgress={this.props.isFollowingInProgress}\r\n                followingInProgress={this.props.followingInProgress}\r\n                followThunkCreator={this.props.followThunkCreator}\r\n                unFollowThunkCreator={this.props.unFollowThunkCreator}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect<MapStatePropsType, MapDispatchPropsType, {}, RootState>\r\n    (mapStateToProps, mapDispatchToProps)\r\n)(FindFriendsAPIContainer)\r\n\r\n\r\n// without compose\r\n// let AuthRedirectComponent = withAuthRedirect(FindFriendsAPIContainer);\r\n// let FindFriendsContainer = connect<MapStatePropsType, MapDispatchPropsType, {}, RootState>\r\n// (mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\r\n// export default FindFriendsContainer;","import {profileAPI} from \"../API/API\";\r\nimport {RootState} from \"./redux-store\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {v1} from \"uuid\";\r\n\r\n\r\ntype initialStateType = typeof initialState\r\n\r\n\r\nexport type PostDataArray = {\r\n    id: string\r\n    message: string\r\n    like: number\r\n}\r\nexport type ContactsType = {\r\n    facebook: string\r\n    website: string\r\n    vk: string\r\n    twitter: string\r\n    instagram: string\r\n    youtube: string\r\n    github: string\r\n    mainLink: string\r\n}\r\nexport type PhotosType = {\r\n    small: string | null\r\n    large: string | null\r\n}\r\nexport type ProfileType = {\r\n    userId: number\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    aboutMe: string\r\n    fullName: string\r\n    contacts: ContactsType\r\n    photos: PhotosType\r\n}\r\n\r\nlet initialState = {\r\n    postData: [\r\n        {id: v1(), message: 'Hey, how you doing?', like: 5},\r\n        {id: v1(), message: 'What\\'s cooking, good looking?', like: 8},\r\n    ] as Array<PostDataArray>,\r\n    newPostText: '' as string,\r\n    profile: null as ProfileType | any,\r\n    status: '' as string\r\n}\r\n\r\nexport type ProfileReducerActionTypes =\r\n    AddPostACType\r\n    | SetUserProfileACType\r\n    | SetStatusACType\r\n    | SavePhotoSuccessACType\r\n    | RemovePostACType\r\n\r\n\r\nconst profileReducer = (state: initialStateType = initialState, action: ProfileReducerActionTypes): initialStateType => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let postDataPushItem = {\r\n                id: v1(),\r\n                message: action.newPostText,\r\n                like: 9,\r\n            }\r\n            return {\r\n                ...state,\r\n                postData: [postDataPushItem, ...state.postData],\r\n                newPostText: '',\r\n            };\r\n\r\n        }\r\n        case REMOVE_POST: {\r\n\r\n            return {\r\n                ...state,\r\n                postData: state.postData.filter(el => el.id !== action.postId),\r\n            };\r\n\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state, profile: action.profile\r\n            };\r\n        }\r\n\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state, status: action.status\r\n            }\r\n        }\r\n        case SAVE_PHOTO_SUCCESS: {\r\n            return {\r\n                ...state, profile: {...state.profile, photos: action.photos}\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type AddPostACType = {\r\n    type: typeof ADD_POST\r\n    newPostText: string\r\n}\r\n\r\nexport type RemovePostACType = {\r\n    type: typeof REMOVE_POST\r\n    postId: string\r\n}\r\n\r\nexport type SetUserProfileACType = {\r\n    type: typeof SET_USER_PROFILE,\r\n    profile: ProfileType\r\n}\r\nexport type SetStatusACType = {\r\n    type: typeof SET_STATUS,\r\n    status: string\r\n}\r\n\r\nexport type SavePhotoSuccessACType = {\r\n    type: typeof SAVE_PHOTO_SUCCESS,\r\n    photos: PhotosType\r\n}\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst REMOVE_POST = 'REMOVE-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\nexport const addPostActionCreator = (newPostText: string): AddPostACType => ({type: ADD_POST, newPostText});\r\n\r\nexport const removePostActionCreator = (postId: string): RemovePostACType => ({type: REMOVE_POST, postId});\r\n\r\nexport const setUserProfileAC = (profile: any): SetUserProfileACType => ({type: SET_USER_PROFILE, profile});\r\n\r\nexport const getProfileInfoThunkCreator = (userId: string)\r\n    : ThunkAction<void, RootState, unknown, ProfileReducerActionTypes> => {\r\n    return (\r\n        (dispatch, getState) => {\r\n            profileAPI.getProfileInfo(userId)\r\n                .then(response => {\r\n                    dispatch(setUserProfileAC(response.data));\r\n                })\r\n        }\r\n    )\r\n}\r\n\r\nexport const setStatusAC = (status: string): SetStatusACType => ({type: SET_STATUS, status});\r\n\r\nexport const savePhotoSuccessAC = (photos: PhotosType): SavePhotoSuccessACType => ({type: SAVE_PHOTO_SUCCESS, photos});\r\n\r\nexport const getStatusThunkCreator = (userId: number)\r\n    : ThunkAction<void, RootState, unknown, ProfileReducerActionTypes> => {\r\n    return (\r\n        (dispatch, getState) => {\r\n            profileAPI.getStatus(userId)\r\n                .then(response => {\r\n                    dispatch(setStatusAC(response.data))\r\n                })\r\n        }\r\n    )\r\n}\r\nexport const updateStatusThunkCreator = (status: string)\r\n    : ThunkAction<void, RootState, unknown, ProfileReducerActionTypes> => {\r\n    return (\r\n        async (dispatch, getState) => {\r\n            try {\r\n                const response = await profileAPI.updateStatus(status)\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(setStatusAC(status))\r\n                }\r\n            } catch (error) {\r\n                // dispatch error\r\n            }\r\n\r\n        }\r\n    )\r\n}\r\n\r\n\r\nexport const savePhotoThunkCreator = (file: any)\r\n    : ThunkAction<void, RootState, unknown, ProfileReducerActionTypes> => {\r\n    return (\r\n        async (dispatch, getState) => {\r\n            let response = await profileAPI.savePhoto(file)\r\n\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(savePhotoSuccessAC(response.data.data.photos))\r\n            }\r\n\r\n        }\r\n    )\r\n}\r\n\r\nexport const saveProfileThunkCreator = (formData: ProfileType)\r\n    : ThunkAction<void, RootState, unknown, ProfileReducerActionTypes> => {\r\n    return (\r\n        async (dispatch, getState) => {\r\n            const userId = getState().auth.data.id;\r\n            let response = await profileAPI.saveProfile(formData)\r\n\r\n            if (response.data.resultCode === 0) {\r\n                userId && dispatch(getProfileInfoThunkCreator(userId.toString()))\r\n            } else {\r\n                const action = stopSubmit('profileSettings', {_error: response.data.messages[0]});\r\n                dispatch<any>(action)\r\n                return Promise.reject(response.data.messages[0])\r\n            }\r\n        }\r\n    )\r\n}\r\n\r\nexport default profileReducer;","import React from 'react';\r\nimport obj from './Post.module.css';\r\nimport {ProfileType} from \"../../../../redux/profileReducer\";\r\n\r\ntype PostPropsType = {\r\n    message: string\r\n    like: number\r\n    profile: ProfileType | null\r\n    removePost: (postId: string) => void\r\n    postId: string\r\n}\r\n\r\nfunction Post(props: PostPropsType) {\r\n\r\n    const onRemovePost = (postId: string) => {\r\n        props.removePost(postId);\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div className={obj.old_posts}>\r\n\r\n            <div className={obj.img_wrapper}>\r\n                <img className={obj.ava} src={\r\n                    props.profile?.photos.small ?\r\n                        props.profile?.photos.small :\r\n                        process.env.PUBLIC_URL + '/img/default.png'} alt='Avatar'\r\n                />\r\n            </div>\r\n\r\n            <div className={obj.old_post_item}>\r\n                <div className={obj.old_post_form}>\r\n                    <div className={obj.user_name}><h4>Alexey Gorbachevskiy</h4></div>\r\n                    <textarea value={props.message} readOnly className={obj.textarea}\r\n                              rows={4} cols={60} id='new_post_text_area' name='new_post_text_area'/>\r\n                    <div className={obj.buttons_wrapper}>\r\n                        {/*<div className={obj.like}><p>Like: {props.like}</p></div>*/}\r\n\r\n                        <div className={obj.extra_wrapper}>\r\n                            {/*<button className={obj.change_button}*/}\r\n                            {/*        value={'Edit'}><i className='fa fa-edit'/> Edit*/}\r\n                            {/*</button>*/}\r\n                            <button\r\n                                onClick={()=>onRemovePost(props.postId)}\r\n                                className={obj.remove_button}\r\n                                value={'Remove'}><i className='fa fa-trash'/> Remove\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Post;","import React from 'react';\r\nimport style from \"./MyPosts.module.css\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../Utils/Validators/validators\";\r\nimport {PostTextarea} from \"../../Common/FormsControls/FormsControls\";\r\n\r\n\r\nconst maxLength = maxLengthCreator(10)\r\n\r\n\r\nexport function AddNewPostForm(props: any) {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={style.new_post_form}>\r\n            <h2>New Post</h2>\r\n            <Field\r\n                   component={PostTextarea} name='newPostText'\r\n                   placeholder={'What\\'s new...'}\r\n                   rows={4} cols={60}\r\n                   validate={[required, maxLength]}\r\n            />\r\n            <button className={style.new_post_button}\r\n                    value={'Post'}><i className='fa fa-paper-plane'/> Post\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport const AddNewPostFormRedux = reduxForm({form: 'AddNewPostForm'})(AddNewPostForm)","import React from 'react';\r\nimport obj from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {AddNewPostFormRedux} from \"./AddNewPostForm\";\r\nimport {PostDataArray, ProfileType} from \"../../../redux/profileReducer\";\r\n\r\n\r\nexport type MyPostsPropsType = {\r\n    postData: Array<PostDataArray>\r\n    newPostText: string\r\n    addPost: (newPostText: string) => void\r\n    removePost: (postId: string) => void\r\n    profile: ProfileType | null\r\n}\r\n\r\nconst MyPosts = React.memo((props: MyPostsPropsType) => {\r\n\r\n    let postElements = props.postData.map((t: PostDataArray) => {\r\n        return <Post postId={t.id} removePost={props.removePost} profile={props.profile} key={t.id} message={t.message} like={t.like}/>\r\n    });\r\n\r\n\r\n    const onAddPost = (values: any) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={obj.posts}>\r\n            <div className={obj.new_post}>\r\n                {/* eslint-disable-next-line react/jsx-no-undef */}\r\n                <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n                {/*<form className={obj.new_post_form}>*/}\r\n                {/*    <h2>New Post</h2>*/}\r\n                {/*    <textarea className={obj.textarea} onChange={onPostChange} value={props.newPostText} ref={textArea}*/}\r\n                {/*              placeholder={'What\\'s new...'} rows={4} cols={60} id='new_post_text_area'*/}\r\n                {/*              name='new_post_text_area'/>*/}\r\n                {/*    <button onClick={onAddPost} className={obj.new_post_button}*/}\r\n                {/*            value={'Post'}><i className='fa fa-paper-plane'/> Post*/}\r\n                {/*    </button>*/}\r\n                {/*</form>*/}\r\n            </div>\r\n            {postElements}\r\n        </div>\r\n    );\r\n});\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {\r\n    addPostActionCreator, PostDataArray, ProfileReducerActionTypes, ProfileType, removePostActionCreator,\r\n} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootState} from \"../../../redux/redux-store\";\r\nimport {Dispatch} from 'redux';\r\n\r\n\r\ntype MapStatePropsType = {\r\n    postData: Array<PostDataArray>\r\n    newPostText: string\r\n    profile: ProfileType | null\r\n}\r\ntype MapDispatchPropsType = {\r\n    addPost: (newPostText:string) => void\r\n    removePost:(postId:string)=>void\r\n}\r\n\r\n\r\nlet mapStateToProps = (state: RootState): MapStatePropsType => {\r\n    return {\r\n        postData: state.profilePage.postData,\r\n        newPostText: state.profilePage.newPostText,\r\n        profile: state.profilePage.profile\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: Dispatch<ProfileReducerActionTypes>): MapDispatchPropsType => {\r\n    return {\r\n        addPost: (newPostText:string) => dispatch(addPostActionCreator(newPostText)),\r\n        removePost:(postId:string)=>dispatch(removePostActionCreator(postId))\r\n    }\r\n}\r\n\r\n\r\nlet MyPostsContainer = connect<MapStatePropsType, MapDispatchPropsType, {}, RootState>\r\n(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\n\r\nexport default MyPostsContainer;","import React, {ChangeEvent} from 'react'\r\nimport style from './ProfileStatus.module.css'\r\n\r\n\r\ntype ProfileStatusPropsType = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nclass ProfileStatus extends React.Component<ProfileStatusPropsType, any> {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateActiveMode = () => {\r\n        this.setState({...this.state, editMode: true})\r\n    }\r\n\r\n    deactivateActiveMode = () => {\r\n        this.setState({...this.state, editMode: false});\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({...this.state, status: e.currentTarget.value})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                Status:\r\n                {\r\n                    this.state.editMode\r\n                        ?\r\n                        <input\r\n                            onChange={this.onStatusChange}\r\n                            autoFocus\r\n                            onBlur={this.deactivateActiveMode}\r\n                            className={style.input}\r\n                            value={this.state.status}\r\n                            type='text'/>\r\n                        :\r\n                        <p className={style.status_text}\r\n                           onDoubleClick={this.activateActiveMode}\r\n                        >{this.props.status ? this.props.status : ' No status'}\r\n                        </p>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default ProfileStatus","import React, {ChangeEvent} from 'react';\r\nimport style from './ProfileInfo.module.css';\r\nimport {ProfileType} from \"../../../redux/profileReducer\";\r\nimport ProfileStatus from './ProfileStatus'\r\n\r\ntype ProfileInfo = {\r\n    profile: ProfileType | null\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n    isOwner: boolean\r\n    savePhoto:(file:any)=>void\r\n}\r\n\r\nfunction ProfileInfo(props: ProfileInfo) {\r\n\r\n    return (\r\n        <div className={style.data_wrapper}>\r\n            <div className={style.ava_wrapper}>\r\n                <img className={style.ava}\r\n                     src={\r\n                         props.profile?.photos.large\r\n                             ?\r\n                             props.profile?.photos.large\r\n                             : process.env.PUBLIC_URL + '/img/default.png'\r\n                     }\r\n                     alt='Avatar'\r\n                />\r\n            </div>\r\n\r\n            <div className={style.data}>\r\n                <div className={style.data_header}>\r\n                    <h2>\r\n                        {props.profile?.fullName\r\n                            .replace(props.profile?.fullName[0], props.profile?.fullName[0].toUpperCase())}\r\n                    </h2>\r\n                </div>\r\n                <div className={style.data_items}>\r\n                    <div className={style.status}>\r\n                        <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n                    </div>\r\n                    <div className={style.job_status}>\r\n                        <p>Job search\r\n                            status: {props.profile?.lookingForAJob ? 'Looking for a job' : 'Indefined'}</p>\r\n                    </div>\r\n                    {\r\n                        props.profile?.lookingForAJob ?\r\n                            <div className={style.job_description}>\r\n                                <p>My professional skills:\r\n                                    {props.profile?.lookingForAJobDescription ?\r\n                                        props.profile.lookingForAJobDescription :\r\n                                        'JS, TS, React, Redux'}\r\n                                </p>\r\n                            </div>\r\n                    : ''\r\n                    }\r\n\r\n                    <div className={style.contacts}>\r\n                        <p>My\r\n                            contacts: {props.profile?.contacts.twitter ? props.profile?.contacts.twitter : 'Oops.'}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport obj from './Profile.module.css';\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport {WithRouterPropsType} from \"./ProfileContainer\";\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\n\r\n\r\ntype ProfilePropsType = { isOwner: boolean, savePhoto:(file:any)=>void } & WithRouterPropsType\r\n\r\nfunction Profile(props: ProfilePropsType) {\r\n    if (!props.profile) {\r\n        return (\r\n            <div className={obj.preloader_wrapper}>\r\n                <Preloader/>\r\n            </div>\r\n        )\r\n    }\r\n    if ((props.profile) && (props.match.params.userId)) {\r\n        if (parseInt(props.match.params.userId) !== props.profile.userId) {\r\n            return (\r\n                <div className={obj.preloader_wrapper}>\r\n                    <Preloader/>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    return (\r\n        <div className={obj.content}>\r\n            <ProfileInfo profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatus}\r\n                         isOwner={props.isOwner}\r\n                         savePhoto={props.savePhoto}\r\n            />\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {RootState} from \"../../redux/redux-store\";\r\nimport {\r\n    getProfileInfoThunkCreator, getStatusThunkCreator, ProfileReducerActionTypes,\r\n    ProfileType, removePostActionCreator, savePhotoThunkCreator, updateStatusThunkCreator,\r\n} from \"../../redux/profileReducer\";\r\nimport {RouteComponentProps, withRouter} from \"react-router\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {withAuthRedirect} from \"../Hoc/withAuthRedirect\";\r\n\r\n\r\nexport type ProfileContainerPropsType = MapStatePropsType & MapDispatchPropsType;\r\nexport type PathParamsType = { userId?: string | undefined }\r\nexport type WithRouterPropsType = RouteComponentProps<PathParamsType> & ProfileContainerPropsType;\r\n\r\nclass ProfileContainer extends React.Component<WithRouterPropsType, {}> {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            if (this.props.authorizedUserId) {\r\n                userId = this.props.authorizedUserId.toString();\r\n\r\n            }\r\n\r\n        }\r\n        this.props.getProfileInfo(userId!);\r\n        this.props.getStatus(parseInt(userId!));\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<WithRouterPropsType>, prevState: Readonly<{}>, snapshot?: any) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({...this.state, status: this.props.status})\r\n        }\r\n\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} isOwner={!this.props.match.params.userId} savePhoto={this.props.savePhoto}/>\r\n        );\r\n    }\r\n}\r\n\r\ntype MapStatePropsType = {\r\n    profile: ProfileType | null\r\n    status: string\r\n    authorizedUserId: number | null\r\n    isAuth: boolean\r\n}\r\ntype MapDispatchPropsType = {\r\n    getProfileInfo: (userId: string) => void\r\n    getStatus: (userId: number) => void\r\n    updateStatus: (status: string) => void\r\n    savePhoto:(file:any)=>void\r\n}\r\n\r\nconst mapStateToProps = (state: RootState): MapStatePropsType => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.data.id,\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: ThunkDispatch<RootState, unknown, ProfileReducerActionTypes>)\r\n    : MapDispatchPropsType => {\r\n    return {\r\n        getProfileInfo: (userId) => dispatch(getProfileInfoThunkCreator(userId)),\r\n        getStatus: (userId: number) => dispatch(getStatusThunkCreator(userId)),\r\n        updateStatus: (status: string) => dispatch(updateStatusThunkCreator(status)),\r\n        savePhoto:(file:any)=>dispatch(savePhotoThunkCreator(file)),\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    withRouter,\r\n    connect<MapStatePropsType, MapDispatchPropsType, {}, RootState>\r\n    (mapStateToProps, mapDispatchToProps)\r\n)(ProfileContainer)\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\r\n// let WithUrlDataContainer = withRouter(AuthRedirectComponent);\r\n// export default connect<MapStatePropsType, MapDispatchPropsType, {}, RootState>\r\n// (mapStateToProps, mapDispatchToProps)(WithUrlDataContainer);","import React from 'react';\r\nimport obj from './Header.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {HeaderContainerPropsType} from \"./HeaderContainer\";\r\n\r\n\r\nfunction Header(props: HeaderContainerPropsType) {\r\n    return (\r\n        <header className={obj.header}>\r\n            <div className={obj.wrap}>\r\n                <div className={`${obj.logo}`}>\r\n                    <NavLink className={obj.logo_link} to='/profile'>\r\n                        <img className={obj.logo_img} src={process.env.PUBLIC_URL + '/img/logo.png'}/>\r\n                    </NavLink>\r\n                </div>\r\n\r\n                <div className={obj.login}>\r\n                        {\r\n                            props.isAuth\r\n                                ?\r\n                                <div className={obj.auth_wrapper}>\r\n                                    <p>{props.userData!.login}</p>\r\n                                    <button className={obj.logout_btn} onClick={props.logout}>Log Out</button>\r\n                                </div>\r\n                                :\r\n                                <NavLink className={obj.login_link} to='/login'>Log In</NavLink>\r\n\r\n                        }\r\n                </div>\r\n\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\n\r\nexport default Header;","import {authAPI, securityAPI} from \"../API/API\";\r\nimport {RootState} from \"./redux-store\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\ntype initialStateType = typeof initialState\r\n\r\n\r\nlet initialState = {\r\n    data: {\r\n        email: null as string | null,\r\n        id: null as number | null,\r\n        login: null as string | null,\r\n    },\r\n    isAuth: false,\r\n    captchaUrl: null as string | null,\r\n}\r\n\r\nexport type AuthReducerActionTypes = SetAuthUserDataACType | GetCaptchaUrlSuccessACType\r\nconst authReducer = (state: initialStateType = initialState, action: AuthReducerActionTypes): initialStateType => {\r\n\r\n    switch (action.type) {\r\n        case SET_AUTH_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                data: {...action.userData!},\r\n                isAuth: action.isAuth,\r\n            }\r\n        }\r\n\r\n        case GET_CAPTCHA_URL_SUCCESS: {\r\n            debugger\r\n            return {\r\n                ...state,\r\n                captchaUrl: action.url\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport type UserDataType = {\r\n    email: string | null,\r\n    id: number | null,\r\n    login: string | null,\r\n} | null\r\ntype SetAuthUserDataACType = {\r\n    type: typeof SET_AUTH_USER_DATA\r\n    userData: UserDataType\r\n    isAuth: boolean\r\n}\r\ntype GetCaptchaUrlSuccessACType = {\r\n    type: typeof GET_CAPTCHA_URL_SUCCESS\r\n    url: string\r\n}\r\nconst SET_AUTH_USER_DATA = 'SET_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'GET_CAPTCHA_URL_SUCCESS';\r\n\r\n\r\nexport const setAuthUserDataAC = (userData: UserDataType, isAuth: boolean): SetAuthUserDataACType => ({\r\n    type: SET_AUTH_USER_DATA,\r\n    userData,\r\n    isAuth\r\n});\r\nexport const getCaptchaUrlAC = (url: string): GetCaptchaUrlSuccessACType => ({\r\n    type: GET_CAPTCHA_URL_SUCCESS, url\r\n});\r\n\r\n\r\nexport const getAuthInfoThunkCreator = (): ThunkAction<void, RootState, unknown, AuthReducerActionTypes> => {\r\n    return (\r\n        async (dispatch, getState) => {\r\n            let response = await authAPI.getAuthInfo();\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setAuthUserDataAC(response.data.data, true));\r\n            }\r\n        }\r\n    )\r\n};\r\n\r\n\r\n//TODO --- AuthReducerActionTypes instead any\r\nexport const loginThunkCreator = (email: string, password: string, rememberMe: boolean, captcha:string|undefined|null): ThunkAction<void, RootState, unknown, any> => {\r\n    return (\r\n        async (dispatch, getState) => {\r\n            let response = await authAPI.login(email, password, rememberMe,captcha)\r\n\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(getAuthInfoThunkCreator())\r\n            }\r\n            else {\r\n                if (response.data.resultCode === 10) {\r\n                    dispatch(getCaptchaUrlThunkCreator())\r\n                }\r\n                const message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error'\r\n                const action = stopSubmit('login', {_error: message});\r\n                dispatch(action);\r\n            }\r\n        }\r\n    )\r\n};\r\n\r\nexport const logoutThunkCreator = (): ThunkAction<void, RootState, unknown, AuthReducerActionTypes> => {\r\n    return (\r\n        (dispatch, getState) => {\r\n            authAPI.logout()\r\n                .then(response => {\r\n                    if (response.data.resultCode === 0) {\r\n                        dispatch(setAuthUserDataAC(null, false));\r\n                    }\r\n                })\r\n        }\r\n    )\r\n};\r\n\r\n\r\nexport const getCaptchaUrlThunkCreator = (): ThunkAction<void, RootState, unknown, AuthReducerActionTypes> => {\r\n    return (\r\n        async (dispatch, getState) => {\r\n            const response = await securityAPI.getCaptchaUrl()\r\n            const captchaUrl = response.data.url;\r\n            dispatch(getCaptchaUrlAC(captchaUrl));\r\n        }\r\n    )\r\n};\r\n\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootState} from \"../../redux/redux-store\";\r\nimport {\r\n    AuthReducerActionTypes,\r\n    getAuthInfoThunkCreator,\r\n    logoutThunkCreator,\r\n    UserDataType\r\n} from \"../../redux/authReducer\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\n\r\n\r\nexport type HeaderContainerPropsType = MapStatePropsType & MapDispatchPropsType;\r\n\r\n\r\nclass HeaderContainer extends React.Component<HeaderContainerPropsType, {}> {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props}/>\r\n        );\r\n    }\r\n}\r\n\r\n\r\ntype MapStatePropsType = {\r\n    userData: UserDataType\r\n    isAuth: boolean\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    logout: () => void\r\n}\r\n\r\nconst mapStateToProps = (state: RootState): MapStatePropsType => {\r\n    return {\r\n        userData: state.auth.data,\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch: ThunkDispatch<RootState, unknown, AuthReducerActionTypes>)\r\n    : MapDispatchPropsType => {\r\n    return {\r\n        logout: () => {\r\n            dispatch(logoutThunkCreator())\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default connect<MapStatePropsType, MapDispatchPropsType, {}, RootState>\r\n(mapStateToProps, mapDispatchToProps)(HeaderContainer);","import style from \"./Login.module.css\";\r\nimport React from \"react\";\r\nimport {Field} from \"redux-form\";\r\nimport {LoginInput} from \"../Common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../Utils/Validators/validators\";\r\n\r\nconst maxLength = maxLengthCreator(40)\r\n\r\nfunction LoginForm(props: any) {\r\n    return (\r\n        <form className={style.form} onSubmit={props.handleSubmit}>\r\n\r\n            <h1 className={style.form_header}>Log In</h1>\r\n\r\n            <div className={style.fields}>\r\n                <div>\r\n                    <Field name={'email'}\r\n                        // className={style.input}\r\n                           placeholder='Email' component={LoginInput}\r\n                           type=\"text\"\r\n                           validate={[required, maxLength]}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <Field name={'password'}\r\n                        // className={style.input}\r\n                           placeholder='Password' component={LoginInput}\r\n                           type=\"password\"\r\n                           validate={[required, maxLength]}\r\n                    />\r\n                </div>\r\n                <div className={style.remember}>\r\n                    <Field name={'rememberMe'} component={'input'} type=\"checkbox\"/>\r\n                    <> Remember</>\r\n                </div>\r\n                {props.error\r\n                    ?\r\n                    <div className={style.error}>\r\n                        {props.error}\r\n                    </div>\r\n                    : ''\r\n                }\r\n            </div>\r\n\r\n            {props.captchaUrl &&\r\n            <div className={style.captcha_wrapper}>\r\n                <img src={props.captchaUrl} alt=\"Captcha\"/>\r\n                <Field name={'captcha'}\r\n                    // className={style.input}\r\n                       placeholder='Type symbols' component={LoginInput}\r\n                       type=\"text\"\r\n                />\r\n            </div>\r\n            }\r\n\r\n            <div className={style.login_btn_wrapper}>\r\n                <button className={style.login_btn}>Log In</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default LoginForm;","import React from 'react';\r\nimport style from './Login.module.css'\r\nimport {reduxForm} from \"redux-form\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootState} from \"../../redux/redux-store\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {AuthReducerActionTypes, loginThunkCreator, logoutThunkCreator} from \"../../redux/authReducer\";\r\nimport {Redirect} from \"react-router\";\r\n\r\n\r\nconst LoginReduxForm: any = reduxForm({\r\n    form: 'login'\r\n})(LoginForm)\r\n\r\n\r\nfunction Login(props: any) {\r\n    const onSubmit = (formData: any) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={style.login_wrapper}>\r\n            <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport type MapStatePropsType = {\r\n    isAuth: boolean\r\n    captchaUrl: string | null\r\n}\r\n\r\n\r\nlet mapStateToProps = (state: RootState): MapStatePropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        captchaUrl: state.auth.captchaUrl\r\n    }\r\n}\r\n\r\nexport type MapDispatchPropsType = {\r\n    login: (email: string, password: string, rememberMe: boolean, captcha: string | null | undefined) => void\r\n    logout: () => void\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: ThunkDispatch<RootState, unknown, AuthReducerActionTypes>)\r\n    : MapDispatchPropsType => {\r\n    return {\r\n        login: (email, password, rememberMe, captcha) => {\r\n            dispatch(loginThunkCreator(email, password, rememberMe, captcha))\r\n        },\r\n        logout: () => {\r\n            dispatch(logoutThunkCreator())\r\n        },\r\n    }\r\n}\r\n\r\n\r\nexport default connect<MapStatePropsType, MapDispatchPropsType, {}, RootState>\r\n(mapStateToProps, mapDispatchToProps)(Login)\r\n","import {authAPI} from \"../API/API\";\r\nimport {RootState} from \"./redux-store\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {getAuthInfoThunkCreator} from \"./authReducer\";\r\n\r\ntype initialStateType = typeof initialState\r\n\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nexport type AppReducerActionTypes = InitializedSuccessACType\r\nconst appReducer = (state: initialStateType = initialState, action: AppReducerActionTypes): initialStateType => {\r\n\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\ntype InitializedSuccessACType = {\r\n    type: typeof INITIALIZED_SUCCESS\r\n}\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\nexport const initializedSuccessAC = (): InitializedSuccessACType => ({\r\n    type: INITIALIZED_SUCCESS\r\n});\r\n\r\n\r\nexport const initializeAppThunkCreator = (): ThunkAction<void, RootState, unknown, AppReducerActionTypes> => {\r\n    return (\r\n        (dispatch: any, getState) => {\r\n            const promise = dispatch(getAuthInfoThunkCreator())\r\n            Promise.all([promise]).then(\r\n                () => {\r\n                    dispatch(initializedSuccessAC())\r\n                }\r\n            )\r\n\r\n        }\r\n    )\r\n};\r\n\r\n\r\nexport default appReducer;","import {createStore, combineReducers, applyMiddleware,compose} from 'redux';\r\nimport profileReducer from \"./profileReducer\";\r\nimport messagesItemReducer from \"./messagesItemReducer\";\r\nimport friendsReducer from \"./friendsReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport appReducer from \"./appReducer\";\r\n\r\n\r\nlet rootReducer = combineReducers(\r\n    {\r\n        profilePage: profileReducer,\r\n        messagesPage: messagesItemReducer,\r\n        // friendsPage: friendsReducer,\r\n        findFriendsPage: friendsReducer,\r\n        auth: authReducer,\r\n        form: formReducer,\r\n        app: appReducer,\r\n    }\r\n);\r\n\r\n\r\n// Connecting of Redux Dev Tool\r\n\r\n// declare global {\r\n//         interface Window {\r\n//                 __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n//         }\r\n// }\r\n// const composeEnhancers = window['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__'] as typeof compose || compose;\r\n// const store = createStore(rootReducer, /* preloadedState, */ composeEnhancers(\r\n//     applyMiddleware(thunkMiddleware)\r\n// ));\r\n// ------------------------------------------------------------------------------------------------------\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>\r\n\r\nlet store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\n\r\nexport default store;","import React, {ChangeEvent} from 'react';\r\nimport {WithRouterPropsType} from \"../Profile/ProfileContainer\";\r\nimport style from './Settings.module.css';\r\n\r\n\r\ntype ProfileSettingsPropsType = { isOwner: boolean, savePhoto: (file: any) => void,setEditMode:(editMode:boolean)=>void } & WithRouterPropsType\r\n\r\nfunction ProfileSettings(props: ProfileSettingsPropsType) {\r\n\r\n\r\n    return (\r\n        <div className={style.profile_settings_area}>\r\n            <h2>Profile Settings</h2>\r\n            <div className={style.profile_settings}>\r\n                <div className={style.ava_wrapper}>\r\n                    <img className={style.ava}\r\n                         src={\r\n                             props.profile?.photos.large\r\n                                 ?\r\n                                 props.profile?.photos.large\r\n                                 : process.env.PUBLIC_URL + '/img/default.png'\r\n                         }\r\n                         alt='Avatar'\r\n                    />\r\n                </div>\r\n\r\n\r\n                <div className={style.data}>\r\n                    <div className={style.data_header}>\r\n                        <p> Full Name:\r\n                            {props.profile?.fullName}\r\n                        </p>\r\n                    </div>\r\n                    <div className={style.data_items}>\r\n                        <div className={style.job_status}>\r\n                            <p>Job search\r\n                                status: {props.profile?.lookingForAJob ? 'yes' : 'no'}</p>\r\n                        </div>\r\n\r\n                        <div className={style.job_description}>\r\n                            <p>My professional skills:\r\n                                {props.profile?.lookingForAJobDescription}\r\n                            </p>\r\n                        </div>\r\n                        <div className={style.aboutMe}>\r\n                            <p>About me:\r\n                                {props.profile?.aboutMe}\r\n                            </p>\r\n                        </div>\r\n\r\n                        <div className={style.contacts}>\r\n                            <h4>My contacts:</h4>\r\n                            <p>Facebook:{props.profile?.contacts.facebook}</p>\r\n                            <p>GitHub:{props.profile?.contacts.github}</p>\r\n                            <p>Instagram:{props.profile?.contacts.instagram}</p>\r\n                            <p>MainLink:{props.profile?.contacts.mainLink}</p>\r\n                            <p>Twitter:{props.profile?.contacts.twitter}</p>\r\n                            <p>VK:{props.profile?.contacts.vk}</p>\r\n                            <p>WebSite:{props.profile?.contacts.website}</p>\r\n                            <p>YouTube:{props.profile?.contacts.youtube}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {\r\n                props.isOwner &&\r\n                <button className={style.edit_btn}\r\n                        onClick={()=>props.setEditMode(true)}\r\n                >\r\n                    Edit\r\n                </button>\r\n            }\r\n\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default ProfileSettings;","import React, {ChangeEvent} from 'react';\r\nimport {WithRouterPropsType} from \"../Profile/ProfileContainer\";\r\nimport style from './Settings.module.css';\r\nimport {ProfileSettingsInput} from \"../Common/FormsControls/FormsControls\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\n\r\n\r\ntype ProfileSettingsFormPropsType = { isOwner: boolean, savePhoto: (file: any) => void } & WithRouterPropsType\r\n\r\nfunction ProfileSettingsForm(props: any) {\r\n\r\n    const onMainPhotoSelected = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files!.length) {\r\n            props.savePhoto(e.target.files![0])\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={style.profile_settings_area}>\r\n            <h2>Profile Settings</h2>\r\n            <div className={style.ava_wrapper}>\r\n                <img className={style.ava}\r\n                     src={\r\n                         props.profile?.photos.large\r\n                             ?\r\n                             props.profile?.photos.large\r\n                             : process.env.PUBLIC_URL + '/img/default.png'\r\n                     }\r\n                     alt='Avatar'\r\n                />\r\n\r\n                {\r\n                    props.isOwner &&\r\n                    <input\r\n                        className={style.choose_img}\r\n                        type={'file'}\r\n                        onChange={onMainPhotoSelected}\r\n                    />\r\n                }\r\n            </div>\r\n            <form className={style.profile_settings} onSubmit={props.handleSubmit}>\r\n\r\n                <div className={style.data}>\r\n                    <div className={style.data_header}>\r\n                        <p> Full Name:\r\n                            {/*{props.profile?.fullName}*/}\r\n                            <Field name={'fullName'}\r\n                                   className={style.input}\r\n                                   placeholder='Full name' component={ProfileSettingsInput}\r\n                                   type=\"text\"\r\n                            />\r\n                        </p>\r\n                    </div>\r\n                    <div className={style.data_items}>\r\n                        <div className={style.job_status}>\r\n                            <p>Job search status:\r\n                                {/*{props.profile?.lookingForAJob ? 'yes' : 'no'}*/}\r\n                                <Field name={'lookingForAJob'}\r\n                                       className={style.input}\r\n                                       placeholder='Job search status' component={ProfileSettingsInput}\r\n                                       type=\"checkbox\"\r\n                                />\r\n                            </p>\r\n                        </div>\r\n\r\n                        <div className={style.job_description}>\r\n                            <p>My professional skills:\r\n                                {/*{props.profile?.lookingForAJobDescription}*/}\r\n                                <Field name={'lookingForAJobDescription'}\r\n                                       className={style.input}\r\n                                       placeholder='My professional skills' component={ProfileSettingsInput}\r\n                                       type=\"text\"\r\n                                />\r\n                            </p>\r\n                        </div>\r\n                        <div className={style.aboutMe}>\r\n                            <p>About me:\r\n                                {/*{props.profile?.lookingForAJobDescription}*/}\r\n                                <Field name={'aboutMe'}\r\n                                       className={style.input}\r\n                                       placeholder='about me' component={ProfileSettingsInput}\r\n                                       type=\"text\"\r\n                                />\r\n                            </p>\r\n                        </div>\r\n\r\n                        <div className={style.contacts}>\r\n                            <h4>My contacts:</h4>\r\n                            <p>Facebook:\r\n                                {/*{props.profile?.contacts.facebook}*/}\r\n                                <Field name={'contacts.facebook'}\r\n                                       className={style.input}\r\n                                       placeholder='Facebook' component={ProfileSettingsInput}\r\n                                       type=\"text\"\r\n                                />\r\n                            </p>\r\n                            <p>GitHub:\r\n                                {/*{props.profile?.contacts.github}*/}\r\n                                <Field name={'contacts.github'}\r\n                                       className={style.input}\r\n                                       placeholder='Github' component={ProfileSettingsInput}\r\n                                       type=\"text\"\r\n                                />\r\n                            </p>\r\n                            <p>Instagram:\r\n                                {/*{props.profile?.contacts.instagram}*/}\r\n                                <Field name={'contacts.instagram'}\r\n                                       className={style.input}\r\n                                       placeholder='Instagram' component={ProfileSettingsInput}\r\n                                       type=\"text\"\r\n                                />\r\n                            </p>\r\n                            <p>MainLink:\r\n                                {/*{props.profile?.contacts.mainLink}*/}\r\n                                <Field name={'contacts.mainLink'}\r\n                                       className={style.input}\r\n                                       placeholder='MainLink' component={ProfileSettingsInput}\r\n                                       type=\"text\"\r\n                                />\r\n                            </p>\r\n                            <p>Twitter:\r\n                                {/*{props.profile?.contacts.twitter}*/}\r\n                                <Field name={'contacts.twitter'}\r\n                                       className={style.input}\r\n                                       placeholder='Twitter' component={ProfileSettingsInput}\r\n                                       type=\"text\"\r\n                                />\r\n                            </p>\r\n                            <p>VK:\r\n                                {/*{props.profile?.contacts.vk}*/}\r\n                                <Field name={'contacts.vk'}\r\n                                       className={style.input}\r\n                                       placeholder='VK' component={ProfileSettingsInput}\r\n                                       type=\"text\"\r\n                                />\r\n                            </p>\r\n                            <p>WebSite:\r\n                                {/*{props.profile?.contacts.website}*/}\r\n                                <Field name={'contacts.website'}\r\n                                       className={style.input}\r\n                                       placeholder='Website' component={ProfileSettingsInput}\r\n                                       type=\"text\"\r\n                                />\r\n                            </p>\r\n                            <p>YouTube:\r\n                                {/*{props.profile?.contacts.youtube}*/}\r\n                                <Field name={'contacts.youtube'}\r\n                                       className={style.input}\r\n                                       placeholder='Youtube' component={ProfileSettingsInput}\r\n                                       type=\"text\"\r\n                                />\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <button className={style.edit_btn}>Save</button>\r\n                {\r\n                    props.error &&\r\n                <div className={style.error}>{props.error}</div>\r\n                }\r\n            </form>\r\n\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nconst ProfileSettingsReduxForm: any = reduxForm({form: 'profileSettings'})(ProfileSettingsForm)\r\n\r\nexport default ProfileSettingsReduxForm;","import React, {useState} from 'react';\r\nimport {WithRouterPropsType} from \"../Profile/ProfileContainer\";\r\nimport style from './Settings.module.css';\r\nimport ProfileSettings from \"./ProfileSettings\";\r\nimport ProfileSettingsForm from \"./ProfileSettingsForm\";\r\n\r\n\r\ntype SettingsPropsType =\r\n    { isOwner: boolean, savePhoto: (file: any) => void, saveProfile: (formData: any) => any }\r\n    & WithRouterPropsType\r\n\r\nfunction Settings(props: SettingsPropsType) {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    const onSubmit = (formData: any) => {\r\n        props.saveProfile(formData)\r\n            .then(()=>{\r\n                setEditMode(false);\r\n            })\r\n\r\n\r\n\r\n    }\r\n    const profile = props.profile\r\n\r\n    return (\r\n        <div className={style.settings_container}>\r\n            {\r\n                editMode\r\n                    ? <ProfileSettingsForm {...props} onSubmit={onSubmit} initialValues={profile}/>\r\n                    : <ProfileSettings {...props} setEditMode={setEditMode}/>\r\n            }\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Settings;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {RootState} from \"../../redux/redux-store\";\r\nimport {\r\n    getProfileInfoThunkCreator, getStatusThunkCreator, ProfileReducerActionTypes,\r\n    ProfileType, savePhotoThunkCreator, saveProfileThunkCreator, updateStatusThunkCreator,\r\n} from \"../../redux/profileReducer\";\r\nimport {RouteComponentProps, withRouter} from \"react-router\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {withAuthRedirect} from \"../Hoc/withAuthRedirect\";\r\nimport Settings from \"./Settings\";\r\n\r\n\r\nexport type ProfileContainerPropsType = MapStatePropsType & MapDispatchPropsType;\r\nexport type PathParamsType = { userId?: string | undefined }\r\nexport type WithRouterPropsType = RouteComponentProps<PathParamsType> & ProfileContainerPropsType;\r\n\r\nclass SettingsContainer extends React.Component<WithRouterPropsType, {}> {\r\n\r\n    refreshSettings() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            if (this.props.authorizedUserId) {\r\n                userId = this.props.authorizedUserId.toString();\r\n\r\n            }\r\n\r\n        }\r\n        this.props.getProfileInfo(userId!);\r\n        this.props.getStatus(parseInt(userId!));\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshSettings()\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<WithRouterPropsType>, prevState: Readonly<{}>, snapshot?: any) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({...this.state, status: this.props.status})\r\n        }\r\n\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshSettings()\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Settings {...this.props} savePhoto={this.props.savePhoto} isOwner={!this.props.match.params.userId}\r\n                      saveProfile={this.props.saveProfile}/>\r\n        );\r\n    }\r\n}\r\n\r\ntype MapStatePropsType = {\r\n    profile: ProfileType | null\r\n    status: string\r\n    authorizedUserId: number | null\r\n    isAuth: boolean\r\n}\r\ntype MapDispatchPropsType = {\r\n    getProfileInfo: (userId: string) => void\r\n    getStatus: (userId: number) => void\r\n    updateStatus: (status: string) => void\r\n    savePhoto: (file: any) => void\r\n    saveProfile: (formData: any) => any\r\n}\r\n\r\nconst mapStateToProps = (state: RootState): MapStatePropsType => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.data.id,\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: ThunkDispatch<RootState, unknown, ProfileReducerActionTypes>)\r\n    : MapDispatchPropsType => {\r\n    return {\r\n        getProfileInfo: (userId) => dispatch(getProfileInfoThunkCreator(userId)),\r\n        getStatus: (userId: number) => dispatch(getStatusThunkCreator(userId)),\r\n        updateStatus: (status: string) => dispatch(updateStatusThunkCreator(status)),\r\n        savePhoto: (file: any) => dispatch(savePhotoThunkCreator(file)),\r\n        saveProfile: (formData: any) => dispatch(saveProfileThunkCreator(formData))\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    withRouter,\r\n    connect<MapStatePropsType, MapDispatchPropsType, {}, RootState>\r\n    (mapStateToProps, mapDispatchToProps)\r\n)(SettingsContainer)\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Nav from './components/NavBar/Nav';\r\nimport FriendsContainer from \"./components/Friends/FriendsContainer\";\r\nimport {HashRouter, Redirect, Route, withRouter} from 'react-router-dom';\r\nimport MessagesContainer from \"./components/Messages/MessagesContainer\";\r\nimport FindFriendsContainer from \"./components/FindFriends/FindFriendsContainer\";\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Login from \"./components/Login/Login\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport store, {RootState} from \"./redux/redux-store\";\r\nimport {AuthReducerActionTypes} from \"./redux/authReducer\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {compose} from \"redux\";\r\nimport {initializeAppThunkCreator} from \"./redux/appReducer\";\r\nimport Preloader from \"./components/Common/Preloader/Preloader\";\r\nimport SettingsContainer from \"./components/Settings/SettingsContainer\";\r\n\r\nclass App extends React.Component<MapDispatchPropsType & MapStatePropsType, {}> {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n        return (\r\n\r\n            <div className='container'>\r\n                <HeaderContainer/>\r\n                <Nav/>\r\n                <Route exact path='/' render={() => <Redirect to={'/profile'}/>}/>\r\n                <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\r\n                <Route path='/friends' render={() => <FriendsContainer/>}/>\r\n                <Route path='/messages' render={() => <MessagesContainer/>}/>\r\n                <Route path='/settings' render={() => <SettingsContainer/>}/>\r\n                <Route path='/findFriends' render={() => <FindFriendsContainer/>}/>\r\n                <Route path='/login' render={() => <Login/>}/>\r\n                {/*<Route path='/profile' component={Profile}/>*/}\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\ntype MapStatePropsType = {\r\n    initialized: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: RootState): MapStatePropsType => {\r\n    return {\r\n        initialized: state.app.initialized\r\n    }\r\n}\r\n\r\n\r\ntype MapDispatchPropsType = {\r\n    initializeApp: () => void\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch: ThunkDispatch<RootState, unknown, AuthReducerActionTypes>)\r\n    : MapDispatchPropsType => {\r\n    return {\r\n        initializeApp: () => {\r\n            dispatch(initializeAppThunkCreator())\r\n        },\r\n    }\r\n}\r\n\r\n\r\nlet AppContainer = compose<React.ComponentType>(\r\n    withRouter,\r\n    connect<MapStatePropsType, MapDispatchPropsType, {}, RootState>(mapStateToProps, mapDispatchToProps)\r\n)(App)\r\n\r\n\r\nexport const Chatter: React.FC = () => {\r\n    return (\r\n        <HashRouter>\r\n            <React.StrictMode>\r\n                <Provider store={store}>\r\n                    <AppContainer/>\r\n                </Provider>\r\n            </React.StrictMode>\r\n        </HashRouter>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\nimport '../node_modules/font-awesome/css/font-awesome.min.css';\r\n\r\nimport {Chatter} from \"./App\";\r\n\r\n\r\nReactDOM.render(\r\n    <Chatter/>,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login_wrapper\":\"Login_login_wrapper__AkEG8\",\"form_header\":\"Login_form_header__e1k3O\",\"form\":\"Login_form__3_EUy\",\"input\":\"Login_input__T1o1n\",\"remember\":\"Login_remember__IJhQy\",\"login_btn_wrapper\":\"Login_login_btn_wrapper__DW-sO\",\"login_btn\":\"Login_login_btn__3cyaU\",\"error\":\"Login_error__ertmk\",\"captcha_wrapper\":\"Login_captcha_wrapper__sc2AD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input_error\":\"FormsControls_input_error__1CLQk\",\"post_textarea\":\"FormsControls_post_textarea__1qDPZ\",\"messages_textarea\":\"FormsControls_messages_textarea__3ffV2\",\"messages_input_error\":\"FormsControls_messages_input_error__2hr8s\",\"login_error_text\":\"FormsControls_login_error_text__2ObwE\",\"login_input\":\"FormsControls_login_input__2zxWf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"old_posts\":\"Post_old_posts__2W-8L\",\"old_post_item\":\"Post_old_post_item__1hesV\",\"img_wrapper\":\"Post_img_wrapper__3Oz4-\",\"ava\":\"Post_ava__3dk-X\",\"textarea\":\"Post_textarea__ejC4l\",\"buttons_wrapper\":\"Post_buttons_wrapper__2NPkS\",\"like\":\"Post_like__X5Mv2\",\"change_button\":\"Post_change_button__37G4g\",\"remove_button\":\"Post_remove_button__RlgGV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"data_wrapper\":\"ProfileInfo_data_wrapper__3t1VA\",\"ava_wrapper\":\"ProfileInfo_ava_wrapper__WH0oX\",\"ava\":\"ProfileInfo_ava__uHH2d\",\"data\":\"ProfileInfo_data__2jJUG\",\"data_items\":\"ProfileInfo_data_items__3-HWV\",\"status\":\"ProfileInfo_status__2W6hb\",\"job_status\":\"ProfileInfo_job_status__U2z5p\",\"job_description\":\"ProfileInfo_job_description__3Zpus\",\"data_header\":\"ProfileInfo_data_header__2ub4Q\",\"choose_img\":\"ProfileInfo_choose_img__LYXYs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2Rxve\",\"wrap\":\"Header_wrap__3IoX8\",\"logo\":\"Header_logo__1Cz1i\",\"logo_img\":\"Header_logo_img__1UD25\",\"login\":\"Header_login__1OUfw\",\"login_link\":\"Header_login_link__2wvha\",\"item\":\"Header_item__PjlFt\",\"auth_wrapper\":\"Header_auth_wrapper__2PXAU\",\"logout_btn\":\"Header_logout_btn__3n_1w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message_container\":\"NotYourMessage_message_container__14TU5\",\"img_wrapper\":\"NotYourMessage_img_wrapper__wbbWr\",\"image\":\"NotYourMessage_image__rVcde\",\"message_body\":\"NotYourMessage_message_body__3tFuO\",\"message_text\":\"NotYourMessage_message_text__3DzxR\",\"time_wrapper\":\"NotYourMessage_time_wrapper__2DDvx\",\"time\":\"NotYourMessage_time__2nb1h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog_item\":\"DialogItem_dialog_item__2j8vs\",\"active\":\"DialogItem_active__1XA1c\",\"img_container\":\"DialogItem_img_container__1IaM5\",\"friend_img\":\"DialogItem_friend_img__1n4LT\",\"name_container\":\"DialogItem_name_container__2AmnJ\",\"friend_name\":\"DialogItem_friend_name__2MpO2\",\"text\":\"DialogItem_text__21Pga\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message_container\":\"YourMessage_message_container__xgsfS\",\"message_body\":\"YourMessage_message_body__1fs6U\",\"message_text\":\"YourMessage_message_text__22rSq\",\"time_wrapper\":\"YourMessage_time_wrapper__1ClUn\",\"time\":\"YourMessage_time__1rJSV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pages_wrapper\":\"Paginator_pages_wrapper__1Ibsn\",\"page\":\"Paginator_page__33183\",\"current_page_is_active\":\"Paginator_current_page_is_active__1oVA4\",\"next_btn\":\"Paginator_next_btn__2eb8q\",\"back_btn\":\"Paginator_back_btn__37qKq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings_container\":\"Settings_settings_container__OtiXg\",\"profile_settings_area\":\"Settings_profile_settings_area__3V4pw\",\"ava_wrapper\":\"Settings_ava_wrapper__3Oz-0\",\"ava\":\"Settings_ava__10Lc8\",\"edit_btn\":\"Settings_edit_btn__3fyK6\",\"input\":\"Settings_input__y4Uba\",\"contacts\":\"Settings_contacts__32h5R\",\"error\":\"Settings_error__2RXLA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message_side_container\":\"MessageItem_message_side_container__csgNy\",\"message_item\":\"MessageItem_message_item__C6XQI\",\"input_container\":\"MessageItem_input_container__4oWtG\",\"send_btn\":\"MessageItem_send_btn__1XX39\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__2n4sO\",\"new_post\":\"MyPosts_new_post__2cISy\",\"new_post_form\":\"MyPosts_new_post_form__xERzI\",\"new_post_button\":\"MyPosts_new_post_button__1dG8J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends_container\":\"FindFriends_friends_container__1f94e\",\"friends_list\":\"FindFriends_friends_list__1Tqz0\",\"footer_wrapper\":\"FindFriends_footer_wrapper__WRKSS\",\"preloader_wrapper\":\"FindFriends_preloader_wrapper__2UJBN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages_container\":\"Messages_messages_container__1XqQz\",\"dialogs_items\":\"Messages_dialogs_items__2VYzu\",\"messages_items\":\"Messages_messages_items__i1oGB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__pIfrp\",\"preloader_wrapper\":\"Profile_preloader_wrapper__2oUDZ\"};"],"sourceRoot":""}