{"version":3,"sources":["components/Friends/Friends.module.css","components/Profile/ProfileInfo/ProfileStatus.module.css","components/NavBar/Nav.module.css","components/Common/Preloader/Preloader.module.css","components/FindFriends/FindFriedItem/FindFriendItem.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","serviceWorker.ts","components/NavBar/Nav.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","components/Friends/FriendItem/FriendItem.tsx","components/Friends/Friends.tsx","components/Hoc/withAuthRedirect.tsx","components/Friends/FriendsContainer.tsx","components/Messages/DialogItem/DialogItem.tsx","redux/messagesItemReducer.ts","components/Messages/MessageItem/YourMessage/YourMessage.tsx","components/Messages/MessageItem/NotYourMessage/NotYourMessage.tsx","components/Common/FormsControls/FormsControls.tsx","components/Utils/Validators/validators.ts","components/Messages/MessageItem/AddMessageForm.tsx","components/Messages/MessageItem/MessageItem.tsx","components/Messages/MessageItem/MessageItemContainer.tsx","components/Messages/Messages.tsx","components/Messages/MessagesContainer.tsx","API/API.tsx","redux/friendsReducer.ts","components/Common/Preloader/Preloader.tsx","components/FindFriends/FindFriedItem/FindFriendItem.tsx","components/Common/Paginator/Paginator.tsx","components/FindFriends/FindFriends.tsx","redux/usersSelectors.ts","components/FindFriends/FindFriendsContainer.tsx","redux/profileReducer.ts","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/AddNewPostForm.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/ProfileInfo/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","components/Header/Header.tsx","redux/authReducer.ts","components/Header/HeaderContainer.tsx","components/Login/LoginForm.tsx","components/Login/Login.tsx","redux/appReducer.ts","redux/redux-store.ts","App.tsx","index.tsx","components/Login/Login.module.css","components/Friends/FriendItem/FriendItem.module.css","components/Header/Header.module.css","components/Messages/MessageItem/NotYourMessage/NotYourMessage.module.css","components/Messages/DialogItem/DialogItem.module.css","components/Common/FormsControls/FormsControls.module.css","components/Messages/MessageItem/YourMessage/YourMessage.module.css","components/Common/Paginator/Paginator.module.css","components/Messages/MessageItem/MessageItem.module.css","components/Profile/MyPosts/MyPosts.module.css","components/FindFriends/FindFriends.module.css","components/Messages/Messages.module.css","components/Profile/Profile.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","Nav","className","obj","nav","item","to","activeClassName","activeLink","link","News","Music","Settings","FriendItem","props","friend_item_container","img_wrapper","ava","src","users","photos","small","alt","info_wrapper","name","to_messages","Friends","friends_container","friends_list","filter","u","followed","map","t","key","id","mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","React","connect","compose","findFriendsPage","DialogItem","path","user_id","dialog_item","active","img_container","friend_img","process","name_container","friend_name","user_name","text","initialState","dialogsData","messagesData","messageText","newMessageBody","SEND_MESSAGE","messagesItemReducer","action","type","body","YourMessage","yourMessageItem","messagesPage","message_container","message_body","message_wrapper","message_text","time_wrapper","time","NotYourMessage","image","PostTextarea","input","meta","hasError","value","error","style","post_textarea","input_error","MessagesTextarea","messages_textarea","messages_input_error","LoginInput","touched","login_input","login_error_text","required","maxLengthCreator","maxLength","length","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","input_container","Field","component","validate","placeholder","send_btn","MessageItem","message_side_container","message_item","values","sendMessageClick","MessageItemContainer","dispatch","sendMessageBodyActionCreator","Messages","messages_container","dialogs_items","dialogElements","messages_items","MessagesContainer","axiosInstance","axios","create","baseURL","withCredentials","headers","friendsAPI","currentPage","pageSize","get","then","response","data","userId","post","delete","profileAPI","status","put","authAPI","email","password","rememberMe","newPostText","totalUsersCount","isFetching","followingInProgress","isFollowingInProgress","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","SET_PRELOADER","SET_IS_FOLLOWING_IN_PROGRESS","followAC","unfollowAC","setCurrentPageAC","setPreloaderAC","setFollowingInProgressAC","friendsReducer","Preloader","preloader","FindFriendItem","info_grid","follow_wrapper","disabled","some","onClick","unFollowThunkCreator","unfollow_btn","followThunkCreator","follow_btn","Paginator","pagesCount","Math","ceil","pages","i","push","portionCount","portionSize","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","back_btn","aria-hidden","pages_wrapper","p","pageNumber","page","current_page_is_active","onPageChanged","next_btn","FindFriends","preloader_wrapper","follow","unfollow","setFollowingInProgress","footer_wrapper","getUsersSelector","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getIsFollowingInProgress","getFollowingInProgress","FindFriendsAPIContainer","setCurrentPage","getUsersThunkCreator","getState","a","items","totalCount","resultCode","postData","message","like","profile","ADD_POST","SET_USER_PROFILE","SET_STATUS","getProfileInfoThunkCreator","setStatusAC","profileReducer","postDataPushItem","Post","old_posts","old_post_item","old_post_form","readOnly","textarea","rows","cols","buttons_wrapper","extra_wrapper","change_button","remove_button","AddNewPostFormRedux","new_post_form","new_post_button","MyPosts","memo","postElements","posts","new_post","addPost","MyPostsContainer","profilePage","addPostActionCreator","ProfileStatus","editMode","activateActiveMode","setState","deactivateActiveMode","updateStatus","onStatusChange","e","currentTarget","onChange","autoFocus","onBlur","status_text","onDoubleClick","ProfileInfo","data_wrapper","ava_wrapper","large","data_header","fullName","replace","toUpperCase","data_items","job_status","lookingForAJob","job_description","lookingForAJobDescription","contacts","twitter","Profile","params","parseInt","content","ProfileContainer","authorizedUserId","toString","getProfileInfo","getStatus","prevProps","prevState","snapshot","withRouter","getStatusThunkCreator","updateStatusThunkCreator","Header","header","wrap","logo","logo_link","logo_img","login","auth_wrapper","userData","logout_btn","logout","login_link","SET_AUTH_USER_DATA","setAuthUserDataAC","getAuthInfoThunkCreator","logoutThunkCreator","authReducer","HeaderContainer","LoginForm","form_header","fields","remember","login_btn_wrapper","login_btn","LoginReduxForm","messages","stopSubmit","_error","loginThunkCreator","login_wrapper","formData","initialized","INITIALIZED_SUCCESS","initializeAppThunkCreator","promise","Promise","all","appReducer","rootReducer","combineReducers","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","App","initializeApp","exact","render","FriendsContainer","FindFriendsContainer","AppContainer","Chatter","StrictMode","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.cfdfdedd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends_container\":\"Friends_friends_container__1bW7t\",\"friends_list\":\"Friends_friends_list__1Uxlm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ProfileStatus_input__2fMFg\",\"status_text\":\"ProfileStatus_status_text__3vCdq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__2Z5Hu\",\"item\":\"Nav_item__3CUye\",\"link\":\"Nav_link__dD6Jy\",\"activeLink\":\"Nav_activeLink__pzyjw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__Em0s3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend_item_container\":\"FindFriendItem_friend_item_container__1UPih\",\"info_grid\":\"FindFriendItem_info_grid__3ClYp\",\"info_wrapper\":\"FindFriendItem_info_wrapper__ySg2_\",\"underline\":\"FindFriendItem_underline__3Op44\",\"img_wrapper\":\"FindFriendItem_img_wrapper__2awzD\",\"ava\":\"FindFriendItem_ava__1og_v\",\"name\":\"FindFriendItem_name__2XHV8\",\"status\":\"FindFriendItem_status__1yQBO\",\"link\":\"FindFriendItem_link__3_5ID\",\"age\":\"FindFriendItem_age__KzX81\",\"follow_wrapper\":\"FindFriendItem_follow_wrapper__2DYDU\",\"location\":\"FindFriendItem_location__VyL1u\",\"follow_btn\":\"FindFriendItem_follow_btn__28vV8\",\"unfollow_btn\":\"FindFriendItem_unfollow_btn__3o3TA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"old_posts\":\"Post_old_posts__2W-8L\",\"old_post_item\":\"Post_old_post_item__1hesV\",\"img_wrapper\":\"Post_img_wrapper__3Oz4-\",\"ava\":\"Post_ava__3dk-X\",\"textarea\":\"Post_textarea__ejC4l\",\"buttons_wrapper\":\"Post_buttons_wrapper__2NPkS\",\"like\":\"Post_like__X5Mv2\",\"change_button\":\"Post_change_button__37G4g\",\"remove_button\":\"Post_remove_button__RlgGV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"data_wrapper\":\"ProfileInfo_data_wrapper__3t1VA\",\"ava_wrapper\":\"ProfileInfo_ava_wrapper__WH0oX\",\"ava\":\"ProfileInfo_ava__uHH2d\",\"data\":\"ProfileInfo_data__2jJUG\",\"data_items\":\"ProfileInfo_data_items__3-HWV\",\"data_header\":\"ProfileInfo_data_header__2ub4Q\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport obj from './Nav.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nfunction Nav() {\r\n    return (\r\n        <nav className={obj.nav}>\r\n            <div className={obj.item}><NavLink to='/profile' activeClassName={obj.activeLink} className={obj.link}>Profile</NavLink></div>\r\n            <div className={obj.item}><NavLink to='/friends' activeClassName={obj.activeLink} className={obj.link}>Friends</NavLink></div>\r\n            <div className={obj.item}><NavLink to='/messages' activeClassName={obj.activeLink} className={obj.link}>Messages</NavLink></div>\r\n            <div className={obj.item}><NavLink to='/news' activeClassName={obj.activeLink} className={obj.link}>News</NavLink></div>\r\n            <div className={obj.item}><NavLink to='/music' activeClassName={obj.activeLink} className={obj.link}>Music</NavLink></div>\r\n            <div className={obj.item}><NavLink to='/settings' activeClassName={obj.activeLink} className={obj.link}>Settings</NavLink></div>\r\n            <div className={obj.item}><NavLink to='/findFriends' activeClassName={obj.activeLink} className={obj.link}>Find Friends</NavLink></div>\r\n        </nav>\r\n    );\r\n}\r\n\r\n\r\nexport default Nav;","import React from 'react';\r\n\r\n\r\n\r\nfunction News() {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default News;","import React from 'react';\r\n\r\n\r\n\r\nfunction Music() {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Music;","import React from 'react';\r\n\r\n\r\n\r\nfunction Settings() {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Settings;","import React from 'react';\r\nimport obj from './FriendItem.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\ntype PhotosType = {\r\n    small: string\r\n    large: string\r\n}\r\n\r\ntype UsersType = {\r\n    name: string\r\n    photos: PhotosType\r\n}\r\n\r\ntype FriendItemPropsType = {\r\n    users: UsersType\r\n}\r\n\r\n\r\nfunction FriendItem(props: FriendItemPropsType) {\r\n    return (\r\n        <div className={obj.friend_item_container}>\r\n            <div className={obj.img_wrapper}>\r\n                <NavLink to='#' className={obj.link}>\r\n                    <img className={obj.ava}\r\n                         src={props.users.photos.small !== null ? props.users.photos.small : 'img/default.png'}\r\n                         alt='Avatar'/>\r\n                </NavLink>\r\n            </div>\r\n            <div className={obj.info_wrapper}>\r\n                <div className={obj.name}>\r\n                    <NavLink to=\"#\" className={obj.link}>\r\n                        <h2>{props.users.name}</h2>\r\n                    </NavLink>\r\n                </div>\r\n                <p className={obj.to_messages}><NavLink to='#' className={obj.link}>Write message\r\n                </NavLink></p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FriendItem;","import React from 'react';\r\nimport obj from './Friends.module.css';\r\nimport {UsersArrayType} from \"../../redux/friendsReducer\";\r\nimport FriendItem from \"./FriendItem/FriendItem\";\r\n\r\n\r\ntype FriendsPropsType = {\r\n    users: Array<UsersArrayType>\r\n}\r\n\r\nfunction Friends(props: FriendsPropsType) {\r\n\r\n    return (\r\n        <div className={obj.friends_container}>\r\n            <div className={obj.friends_list}>\r\n                {props.users.filter((u: UsersArrayType) => u.followed).map((t: UsersArrayType) => {\r\n                    return (\r\n                        <FriendItem key={t.id} users={t}/>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Friends;","import React from 'react';\r\nimport {Redirect} from \"react-router\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootState} from \"../../redux/redux-store\";\r\n\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: RootState): MapStatePropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component: any) => {\r\n    class RedirectComponent extends React.Component<any, any> {\r\n        render() {\r\n            if (!this.props.isAuth) {\r\n                return <Redirect to={'/login'}/>\r\n            }\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedRedirectComponent = connect<MapStatePropsType, {}, {}, RootState>\r\n    (mapStateToProps, {})(RedirectComponent);\r\n\r\n\r\n    return ConnectedRedirectComponent\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {RootState} from \"../../redux/redux-store\";\r\nimport Friends from \"./Friends\";\r\nimport {withAuthRedirect} from \"../Hoc/withAuthRedirect\";\r\nimport {UsersArrayType} from \"../../redux/friendsReducer\";\r\n\r\n\r\ntype MapStatePropsType = {\r\n    users: Array<UsersArrayType>\r\n    isAuth: boolean\r\n}\r\n\r\nlet mapStateToProps = (state: RootState): MapStatePropsType => {\r\n    return {\r\n        users: state.findFriendsPage.users,\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect<MapStatePropsType, {}, {}, RootState>(mapStateToProps, {}),\r\n)(Friends)\r\n\r\n//without compose\r\n// let AuthRedirectComponent = withAuthRedirect(Friends);\r\n// let FriendsContainer = connect<MapStatePropsType, {}, {}, RootState>(mapStateToProps, {})(AuthRedirectComponent);\r\n// export default FriendsContainer;","import React from 'react';\r\nimport obj from './DialogItem.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n\r\ntype DialogPropsType = {\r\n    user_id: number\r\n    user_name: string\r\n}\r\n\r\nfunction DialogItem(props: DialogPropsType) {\r\n    let path = '/messages/' + props.user_id;\r\n    return <div className={obj.dialog_item + ' ' + obj.active}>\r\n        <div className={obj.img_container}>\r\n            <NavLink to={'#'}>\r\n                <img className={obj.friend_img} src={process.env.PUBLIC_URL + '/img/friend_images/Bezos.png'} alt=''/>\r\n            </NavLink>\r\n        </div>\r\n        <div className={obj.name_container}>\r\n            <NavLink className={obj.friend_name} to={'#'}>{props.user_name}</NavLink>\r\n            <NavLink className={obj.text} to={path}>Go to Dialog</NavLink>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\nexport default DialogItem;","export type DialogsDataArray = {\r\n    id: number\r\n    name: string\r\n}\r\nexport type MessagesDataArray = {\r\n    id: number\r\n    messageText: string\r\n}\r\n\r\nexport type InitialStateType = typeof initialState;\r\n\r\nlet initialState = {\r\n    dialogsData: [\r\n        {id: 1, name: 'Jeff Bezos'},\r\n        {id: 2, name: 'Elon Musk'},\r\n        {id: 3, name: 'Jordan Peterson'},\r\n\r\n    ] as Array<DialogsDataArray>,\r\n    messagesData: [\r\n        {id: 1, messageText: 'I\\'m fine. How\\'re you?'},\r\n        {id: 2, messageText: 'Hellooooooooooooooooooooooooooooooooooooooooo'},\r\n        {id: 3, messageText: 'Byeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee'},\r\n\r\n    ] as Array<MessagesDataArray>,\r\n    newMessageBody: '',\r\n}\r\n\r\nexport type MessagesReducerActionTypes =  SendMessageBodyActionCreatorType\r\n\r\nconst messagesItemReducer = (state: InitialStateType = initialState, action: MessagesReducerActionTypes): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case SEND_MESSAGE: {\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                // newMessageBody: '',\r\n                messagesData: [...state.messagesData, {id: 4, messageText: body}],\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport type SendMessageBodyActionCreatorType = {\r\n    type: typeof SEND_MESSAGE,\r\n    newMessageBody:string\r\n}\r\n\r\nconst SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nexport const sendMessageBodyActionCreator = (newMessageBody:string): SendMessageBodyActionCreatorType => ({type: SEND_MESSAGE,newMessageBody});\r\n\r\n\r\nexport default messagesItemReducer;","import React from 'react';\r\nimport obj from './YourMessage.module.css';\r\nimport {MessagesPageType} from \"../MessageItem\";\r\nimport {MessagesDataArray} from \"../../../../redux/messagesItemReducer\";\r\n\r\n\r\n\r\ntype YourMessagePropsType = {\r\n    messagesPage: MessagesPageType\r\n}\r\n\r\nfunction YourMessage(props: YourMessagePropsType) {\r\n\r\n    const yourMessageItem = props.messagesPage.messagesData.map((t: MessagesDataArray) => {\r\n        return (\r\n            <div key={t.id} className={obj.message_container}>\r\n\r\n                <div className={obj.message_body}>\r\n                    <h4>I'm</h4>\r\n\r\n                    <div className={obj.message_wrapper}>\r\n                        <p className={obj.message_text}>{t.messageText}</p>\r\n                    </div>\r\n\r\n                    <div className={obj.time_wrapper}>\r\n                        <p className={obj.time}>20:00</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    })\r\n    return (\r\n        <>\r\n            {yourMessageItem}\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default YourMessage;","import React from 'react';\r\nimport obj from './NotYourMessage.module.css';\r\n\r\nfunction NotYourMessage() {\r\n\r\n    const name = 'Boris Berezovskiy';\r\n    const message_text = 'Hey, how you doing?'\r\n    const time = '20:00';\r\n    return (\r\n        <div className={obj.message_container}>\r\n            <div className={obj.img_wrapper}>\r\n                <img className={obj.image} src={process.env.PUBLIC_URL+'/img/avatar.png'} alt='img'/>\r\n            </div>\r\n            <div className={obj.message_body}>\r\n                <h4>{name}</h4>\r\n\r\n                <div className={obj.message_wrapper}>\r\n                    <p className={obj.message_text}>{message_text}</p>\r\n                </div>\r\n\r\n                <div className={obj.time_wrapper}>\r\n                    <p className={obj.time}>{time}</p>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default NotYourMessage;","import React from 'react'\r\nimport style from './FormsControls.module.css'\r\n\r\nexport const PostTextarea = ({input, meta, ...props}: any) => {\r\n    const hasError = input.value && meta.error;\r\n    return (\r\n        <>\r\n            <textarea\r\n                className={style.post_textarea + ' ' + (hasError && style.input_error)}\r\n                {...input} {...props}\r\n            />\r\n            {hasError && <span>{meta.error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport const MessagesTextarea = ({input, meta, ...props}: any) => {\r\n    const hasError = input.value && meta.error;\r\n    return (\r\n        <>\r\n            <textarea\r\n                className={style.messages_textarea + ' ' + (hasError && style.messages_input_error)}\r\n                {...input} {...props}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport const LoginInput = ({input, meta, ...props}: any) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <>\r\n            <input\r\n                className={style.login_input + ' ' + (hasError && style.input_error)}\r\n                {...input} {...props}\r\n            />\r\n            {hasError && <span className={style.login_error_text}>{meta.error}</span>}\r\n        </>\r\n    )\r\n}","import React from 'react'\r\n\r\n\r\nexport const required = (value: string) => {\r\n    if (value) {\r\n        return undefined\r\n    } else {\r\n        return 'Field is required'\r\n    }\r\n}\r\n\r\n\r\nexport const maxLengthCreator = (maxLength:number) =>(value: string)=> {\r\n    if (value && value.length > maxLength) {\r\n        return `Field length cannot be more than ${maxLength} symbols`\r\n    } else {\r\n        return undefined\r\n    }\r\n}","import React from 'react';\r\nimport obj from \"./MessageItem.module.css\";\r\nimport {Field} from \"redux-form\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {MessagesTextarea} from \"../../Common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../Utils/Validators/validators\";\r\n\r\nconst maxLength = maxLengthCreator(10)\r\n\r\nexport function AddMessageForm(props: any) {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={obj.input_container}>\r\n            <Field component={MessagesTextarea}\r\n                   validate={[required, maxLength]}\r\n                   name='newMessageBody'\r\n                   placeholder={'Write a message...'}/>\r\n            <button className={obj.send_btn}> Send</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport const AddMessageFormRedux = reduxForm({form: 'AddMessageForm'})(AddMessageForm)","import React, {ChangeEvent} from 'react';\r\nimport obj from './MessageItem.module.css';\r\nimport YourMessage from './YourMessage/YourMessage';\r\nimport NotYourMessage from './NotYourMessage/NotYourMessage';\r\nimport {DialogsDataArray, MessagesDataArray} from \"../../../redux/messagesItemReducer\";\r\nimport {AddMessageFormRedux} from \"./AddMessageForm\";\r\n\r\nexport type MessagesPageType = {\r\n    dialogsData: Array<DialogsDataArray>\r\n    messagesData: Array<MessagesDataArray>\r\n    newMessageBody: string\r\n}\r\n\r\ntype MessageItemPropsType = {\r\n    messagesPage: MessagesPageType\r\n    sendMessageClick: (newMessageBody: string) => void\r\n}\r\n\r\nfunction MessageItem(props: MessageItemPropsType) {\r\n\r\n\r\n    let addNewMessage = (values: any) => {\r\n        props.sendMessageClick(values.newMessageBody);\r\n    }\r\n    return (\r\n        <div className={obj.message_side_container}>\r\n            <div className={obj.message_item}>\r\n                <NotYourMessage/>\r\n                <YourMessage messagesPage={props.messagesPage}/>\r\n            </div>\r\n\r\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default MessageItem;","import React, {Dispatch} from 'react';\r\nimport {\r\n    DialogsDataArray, MessagesDataArray,\r\n    MessagesReducerActionTypes,\r\n    sendMessageBodyActionCreator,\r\n} from \"../../../redux/messagesItemReducer\";\r\nimport MessageItem from \"./MessageItem\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootState} from \"../../../redux/redux-store\";\r\n\r\n\r\ntype MapStatePropsType = {\r\n    messagesPage: {\r\n        dialogsData: Array<DialogsDataArray>\r\n        messagesData: Array<MessagesDataArray>\r\n        newMessageBody: string\r\n    }\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    sendMessageClick: (newMessageBody:string) => void\r\n}\r\n\r\nlet mapStateToProps = (state: RootState): MapStatePropsType => {\r\n    return {\r\n        messagesPage: state.messagesPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: Dispatch<MessagesReducerActionTypes>): MapDispatchPropsType => {\r\n    return {\r\n        sendMessageClick: (newMessageBody:string) => {\r\n            dispatch(sendMessageBodyActionCreator(newMessageBody));\r\n        },\r\n    }\r\n};\r\nlet MessageItemContainer =\r\n    connect<MapStatePropsType, MapDispatchPropsType, {}, RootState>(mapStateToProps, mapDispatchToProps)(MessageItem);\r\n\r\n\r\nexport default MessageItemContainer;","import React from 'react';\r\nimport obj from './Messages.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport MessageItemContainer from \"./MessageItem/MessageItemContainer\";\r\nimport {DialogsDataArray} from \"../../redux/messagesItemReducer\";\r\nimport {MapStatePropsType} from \"./MessagesContainer\";\r\n\r\n\r\n\r\n\r\nfunction Messages(props: MapStatePropsType) {\r\n\r\n    return (\r\n        <div className={obj.messages_container}>\r\n            <div className={obj.dialogs_items}>\r\n                {props.dialogElements.map((t: DialogsDataArray) => {\r\n                    return <DialogItem key={t.id} user_name={t.name} user_id={t.id}/>\r\n                })}\r\n            </div>\r\n            <div className={obj.messages_items}>\r\n                <MessageItemContainer/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Messages;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {RootState} from \"../../redux/redux-store\";\r\nimport Messages from \"./Messages\";\r\nimport {DialogsDataArray} from \"../../redux/messagesItemReducer\";\r\nimport {withAuthRedirect} from \"../Hoc/withAuthRedirect\";\r\n\r\n\r\nexport type MapStatePropsType = {\r\n    dialogElements: Array<DialogsDataArray>\r\n}\r\n\r\nlet mapStateToProps = (state: RootState): MapStatePropsType => {\r\n    return {\r\n        dialogElements: state.messagesPage.dialogsData,\r\n    }\r\n}\r\n\r\n\r\nlet MessagesContainer = compose(\r\n    withAuthRedirect,\r\n    connect<MapStatePropsType, {}, {}, RootState>\r\n    (mapStateToProps, {}),\r\n)(Messages)\r\n\r\n// without compose\r\n// let AuthRedirectComponent = WithAuthRedirect(Messages);\r\n// let MessagesContainer = connect<MapStatePropsType, {}, {}, RootState>\r\n// (mapStateToProps, {})(AuthRedirectComponent);\r\n\r\n\r\nexport default MessagesContainer;","import axios from \"axios\";\r\nimport {UsersArrayType} from \"../redux/friendsReducer\";\r\n\r\n\r\nconst axiosInstance = axios.create(\r\n    {\r\n        baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n        withCredentials: true,\r\n        headers: {'API-KEY': '3de0712e-e19a-4637-bf5e-355c7a8ad46c'}\r\n    },\r\n);\r\n\r\n\r\ntype GetUsersResponseType = {\r\n    items: Array<UsersArrayType>\r\n    totalCount: number\r\n    error: string\r\n}\r\ntype FollowResponseType = {\r\n    resultCode: number\r\n    messages: Array<string>\r\n    data: {}\r\n}\r\n\r\nexport const friendsAPI = {\r\n    getUsers(currentPage: number, pageSize: number) {\r\n        debugger\r\n        return (\r\n            axiosInstance.get<GetUsersResponseType>(`users?page=${currentPage}&count=${pageSize}`)\r\n                .then(response => response.data)\r\n\r\n        )\r\n    },\r\n    follow(userId: number) {\r\n        return (\r\n            axiosInstance.post<FollowResponseType>(`follow/${userId}`)\r\n        )\r\n    },\r\n    unFollow(userId: number) {\r\n        return (\r\n            axiosInstance.delete<FollowResponseType>(`follow/${userId}`)\r\n        )\r\n    },\r\n}\r\n\r\n\r\ntype GetProfileResponseType = {\r\n    userId: number\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    fullName: string\r\n    contacts: {\r\n        github: string\r\n        vk: string\r\n        facebook: string\r\n        instagram: string\r\n        twitter: string\r\n        website: string\r\n        youtube: string\r\n        mainLink: string\r\n    }\r\n    photos: {\r\n        small: string | null\r\n        large: string | null\r\n    }\r\n\r\n}\r\nexport const profileAPI = {\r\n    getProfileInfo(userId: string) {\r\n        return (\r\n            axiosInstance.get<GetProfileResponseType>(`profile/${userId}`)\r\n        )\r\n    },\r\n    getStatus(userId: number){\r\n        return (\r\n            axiosInstance.get<string>(`profile/status/${userId}`)\r\n        )\r\n    },\r\n    updateStatus(status: string){\r\n        return (\r\n            axiosInstance.put(`profile/status/`,{status:status})\r\n        )\r\n    },\r\n}\r\n\r\n\r\ntype GetAuthInfoResponseType = {\r\n    data: { id: number, email: string, login: string }\r\n    resultCode: number\r\n    messages: Array<string>\r\n}\r\nexport const authAPI = {\r\n    getAuthInfo() {\r\n        return (\r\n            axiosInstance.get<GetAuthInfoResponseType>(`auth/me`)\r\n        )\r\n    },\r\n    login(email:string,password:string,rememberMe=false){\r\n        return(\r\n            axiosInstance.post(`auth/login`,{email,password,rememberMe})\r\n        )\r\n    },\r\n    logout(){\r\n        return(\r\n            axiosInstance.delete(`auth/login`)\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","import {friendsAPI} from \"../API/API\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {RootState} from \"./redux-store\";\r\n\r\ntype initialStateType = typeof initialState\r\n\r\n\r\nexport type PhotosType = {\r\n    small: string\r\n    large: string\r\n}\r\nexport type UsersArrayType = {\r\n    id: number\r\n    name: string\r\n    uniqueUrlName: string\r\n    photos: PhotosType\r\n    status: string\r\n    followed: boolean\r\n}\r\n\r\nlet initialState = {\r\n    users: <UsersArrayType[]>[],\r\n    newPostText: '',\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: <number[]>[],\r\n    isFollowingInProgress: false,\r\n}\r\n\r\nexport type FriendsReducerActionTypes =\r\n    FollowACType\r\n    | UnfollowACType\r\n    | SetUsersACTYPE\r\n    | SetCurrentPageACTYPE\r\n    | SetTotalUsersCountACType\r\n    | SetPreloaderACType\r\n    | SetFollowingInProgressACType;\r\nconst friendsReducer = (state: initialStateType = initialState, action: FriendsReducerActionTypes): initialStateType => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: state.users.map((u) => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u\r\n                })\r\n            };\r\n        }\r\n        case UNFOLLOW: {\r\n            return {\r\n                ...state, users: state.users.map((u) => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u\r\n                })\r\n            };\r\n        }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.totalUsersCount}\r\n        }\r\n        case SET_PRELOADER: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case SET_IS_FOLLOWING_IN_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFollowingInProgress ?\r\n                    [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type FollowACType = {\r\n    type: typeof FOLLOW\r\n    userId: number\r\n}\r\nexport type UnfollowACType = {\r\n    type: typeof UNFOLLOW\r\n    userId: number\r\n}\r\nexport type SetUsersACTYPE = {\r\n    type: typeof SET_USERS\r\n    users: Array<UsersArrayType>\r\n}\r\nexport type SetCurrentPageACTYPE = {\r\n    type: typeof SET_CURRENT_PAGE\r\n    currentPage: number\r\n}\r\n\r\nexport type SetTotalUsersCountACType = {\r\n    type: typeof SET_TOTAL_USERS_COUNT\r\n    totalUsersCount: number\r\n}\r\nexport type SetPreloaderACType = {\r\n    type: typeof SET_PRELOADER\r\n    isFetching: boolean\r\n}\r\nexport type SetFollowingInProgressACType = {\r\n    type: typeof SET_IS_FOLLOWING_IN_PROGRESS\r\n    isFollowingInProgress: boolean\r\n    userId: number\r\n}\r\n\r\nexport type getUsersThunkCreator = {}\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst SET_PRELOADER = 'SET_PRELOADER';\r\nconst SET_IS_FOLLOWING_IN_PROGRESS = 'SET_IS_FOLLOWING_IN_PROGRESS';\r\n\r\nexport const followAC = (userId: number): FollowACType => ({type: FOLLOW, userId});\r\nexport const unfollowAC = (userId: number): UnfollowACType => ({type: UNFOLLOW, userId});\r\nexport const setUsersAC = (users: Array<UsersArrayType>): SetUsersACTYPE => ({type: SET_USERS, users});\r\nexport const setCurrentPageAC = (currentPage: number): SetCurrentPageACTYPE => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCountAC = (totalUsersCount: number): SetTotalUsersCountACType => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    totalUsersCount\r\n});\r\nexport const setPreloaderAC = (isFetching: boolean): SetPreloaderACType => ({type: SET_PRELOADER, isFetching});\r\n\r\nexport const setFollowingInProgressAC =\r\n    (isFollowingInProgress: boolean,\r\n     userId: number): SetFollowingInProgressACType => ({\r\n        type: SET_IS_FOLLOWING_IN_PROGRESS,\r\n        isFollowingInProgress,\r\n        userId,\r\n    });\r\n\r\n\r\nexport const getUsersThunkCreator = (currentPage: number, pageSize: number)\r\n    : ThunkAction<void, RootState, unknown, FriendsReducerActionTypes> => {\r\n    return (\r\n        async (dispatch, getState) => {\r\n            dispatch(setPreloaderAC(true));\r\n            dispatch(setCurrentPageAC(currentPage));\r\n            const data = await friendsAPI.getUsers(currentPage, pageSize)\r\n            dispatch(setPreloaderAC(false));\r\n            dispatch(setUsersAC(data.items));\r\n            dispatch(setTotalUsersCountAC(data.totalCount));\r\n        }\r\n    )\r\n}\r\n\r\n\r\nexport const followThunkCreator = (userId: number)\r\n    : ThunkAction<void, RootState, unknown, FriendsReducerActionTypes> => {\r\n    return (\r\n        async (dispatch, getState) => {\r\n            dispatch(setFollowingInProgressAC(true, userId));\r\n            const response = await friendsAPI.follow(userId)\r\n            if (response.data.resultCode == 0) {\r\n                dispatch(followAC(userId));\r\n            }\r\n            dispatch(setFollowingInProgressAC(false, userId));\r\n        }\r\n    )\r\n}\r\n\r\nexport const unFollowThunkCreator = (userId: number)\r\n    : ThunkAction<void, RootState, unknown, FriendsReducerActionTypes> => {\r\n    return (\r\n        (dispatch, getState) => {\r\n            dispatch(setFollowingInProgressAC(true, userId));\r\n            friendsAPI.unFollow(userId)\r\n                .then(response => {\r\n                    if (response.data.resultCode == 0) {\r\n                        dispatch(unfollowAC(userId));\r\n                    }\r\n                    dispatch(setFollowingInProgressAC(false, userId));\r\n                })\r\n        }\r\n    )\r\n}\r\n\r\nexport default friendsReducer;","import React from 'react';\r\nimport obj from \"./Preloader.module.css\";\r\n\r\n\r\nfunction Preloader() {\r\n    return (\r\n        <>\r\n            <img className={obj.preloader} src={process.env.PUBLIC_URL + '/img/spinner.svg'}/>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Preloader;","import React from 'react';\r\nimport obj from './FindFriendItem.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\nimport { UsersArrayType} from \"../../../redux/friendsReducer\";\r\n\r\n\r\ntype FriendItemType = {\r\n    users: UsersArrayType\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    setFollowingInProgress: (isFollowingInProgress: boolean, userId: number) => void\r\n    isFollowingInProgress: boolean\r\n    followingInProgress: Array<number>\r\n    followThunkCreator:(userId:number)=>void\r\n    unFollowThunkCreator:(userId:number)=>void\r\n}\r\n\r\n\r\nfunction FindFriendItem(props: FriendItemType) {\r\n\r\n    const onFollow = () => {\r\n        props.followThunkCreator(props.users.id);\r\n    }\r\n    const onUnfollow = () => {\r\n        props.unFollowThunkCreator(props.users.id);\r\n    }\r\n    return (\r\n        <div className={obj.friend_item_container}>\r\n            <div className={obj.img_wrapper}>\r\n                <NavLink to={'/profile/' + props.users.id} className={obj.link}>\r\n                    <img className={obj.ava}\r\n                         src={props.users.photos.small ? props.users.photos.small : process.env.PUBLIC_URL + '/img/default.png'}\r\n                         alt='Avatar'/>\r\n                </NavLink>\r\n            </div>\r\n            <div className={obj.info_grid}>\r\n                <div className={obj.info_wrapper}>\r\n                    <div className={obj.name}>\r\n                        <NavLink to={'/profile/' + props.users.id} className={obj.link}>\r\n                            <h2>{`${props.users.name}`}</h2>\r\n                        </NavLink>\r\n                        {/*<p className={obj.age}>&nbsp; {`${props.users.age} years old`}</p>*/}\r\n                    </div>\r\n                    <p className={obj.status}>{props.users.status ? props.users.status : 'What\\'s cooking, good looking?'}</p>\r\n                </div>\r\n                <div className={obj.follow_wrapper}>\r\n                    {/*<p className={obj.location}>{`${props.users.location.city}, ${props.users.location.country}`}</p>*/}\r\n\r\n                    {props.users.followed ?\r\n                        <button\r\n                            disabled={props.followingInProgress.some(id => id === props.users.id)}\r\n                            onClick={onUnfollow}\r\n                            className={obj.unfollow_btn}>Unfollow\r\n                        </button>\r\n                        :\r\n                        <button\r\n                            disabled={props.followingInProgress.some(id => id === props.users.id)}\r\n                            onClick={onFollow}\r\n                            className={obj.follow_btn}>Follow\r\n                        </button>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FindFriendItem;","import React, {useState} from 'react';\r\nimport obj from './Paginator.module.css';\r\n\r\n\r\ntype PaginatorPropsType = {\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    portionSize: number\r\n}\r\n\r\nfunction Paginator(props: PaginatorPropsType) {\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    let pages: Array<number> = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / props.portionSize);\r\n    // for next/prev buttons disabling\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * props.portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * props.portionSize;\r\n\r\n    return (\r\n        <>\r\n            {\r\n                portionNumber > 1\r\n                &&\r\n                <button className={obj.back_btn}\r\n                        onClick={() => setPortionNumber(portionNumber - 1)}\r\n                >\r\n                    <i className=\"fa fa-angle-double-left\" aria-hidden=\"true\"/>\r\n                    &nbsp; Back\r\n                </button>\r\n            }\r\n\r\n            <span className={obj.pages_wrapper}>\r\n            {\r\n                pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                    .map((pageNumber: number) => {\r\n                            return (\r\n                                <span\r\n                                    className={props.currentPage === pageNumber ? `${obj.page} ${obj.current_page_is_active}` : obj.page}\r\n                                    key={pageNumber} onClick={() => props.onPageChanged(pageNumber)}\r\n                                >\r\n                                    {pageNumber}\r\n                                </span>\r\n                            )\r\n                        }\r\n                    )\r\n            }\r\n            </span>\r\n\r\n            {\r\n                portionCount > portionNumber\r\n                &&\r\n                <button className={obj.next_btn}\r\n                        onClick={() => setPortionNumber(portionNumber + 1)}\r\n                > Next &nbsp;\r\n                    <i className=\"fa fa-angle-double-right\" aria-hidden=\"true\"/>\r\n                </button>\r\n            }\r\n        </>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport obj from \"./FindFriends.module.css\";\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\nimport {UsersArrayType} from \"../../redux/friendsReducer\";\r\nimport FindFriendItem from \"./FindFriedItem/FindFriendItem\";\r\nimport Paginator from \"../Common/Paginator/Paginator\";\r\n\r\n\r\ntype FindFriendsPropsType = {\r\n    users: Array<UsersArrayType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    isFetching: boolean\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    setFollowingInProgress: (isFollowingInProgress: boolean, userId: number) => void\r\n    isFollowingInProgress: boolean\r\n    followingInProgress: Array<number>\r\n    followThunkCreator: (userId: number) => void\r\n    unFollowThunkCreator: (userId: number) => void\r\n}\r\n\r\n\r\nfunction FindFriends(props: FindFriendsPropsType) {\r\n\r\n    const portionSize=10;\r\n\r\n    return (\r\n\r\n        <div className={obj.friends_container}>\r\n            <div className={obj.friends_list}>\r\n\r\n                {\r\n                    props.isFetching ?\r\n                        <div className={obj.preloader_wrapper}>\r\n                            <Preloader/>\r\n                        </div>\r\n                        : null\r\n                }\r\n\r\n                {\r\n                    props.users.map((t: UsersArrayType) => {\r\n                        return (\r\n                            <FindFriendItem key={t.id}\r\n                                            users={t}\r\n                                            follow={props.follow}\r\n                                            unfollow={props.unfollow}\r\n                                            setFollowingInProgress={props.setFollowingInProgress}\r\n                                            isFollowingInProgress={props.isFollowingInProgress}\r\n                                            followingInProgress={props.followingInProgress}\r\n                                            followThunkCreator={props.followThunkCreator}\r\n                                            unFollowThunkCreator={props.unFollowThunkCreator}\r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n\r\n                <span className={obj.footer_wrapper}>\r\n                       <Paginator currentPage={props.currentPage} onPageChanged={props.onPageChanged}\r\n                                  pageSize={props.pageSize} totalUsersCount={props.totalUsersCount}\r\n                                  portionSize={portionSize}\r\n                       />\r\n                </span>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default FindFriends;","import {createSelector} from \"reselect\";\r\n\r\n\r\nconst getUsers = (state: any) => {\r\n    return state.findFriendsPage.users\r\n}\r\n\r\nexport const getUsersSelector = createSelector(getUsers, (users: any) => {\r\n    return users\r\n})\r\n\r\n\r\nexport const getPageSize = (state: any) => {\r\n    return state.findFriendsPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state: any) => {\r\n    return state.findFriendsPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state: any) => {\r\n    return state.findFriendsPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state: any) => {\r\n    return state.findFriendsPage.isFetching\r\n}\r\n\r\nexport const getIsFollowingInProgress = (state: any) => {\r\n    return state.findFriendsPage.isFollowingInProgress\r\n}\r\n\r\nexport const getFollowingInProgress = (state: any) => {\r\n    return state.findFriendsPage.followingInProgress\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {RootState} from \"../../redux/redux-store\";\r\nimport {\r\n    followAC, followThunkCreator,\r\n    FriendsReducerActionTypes, getUsersThunkCreator,\r\n    setCurrentPageAC, setFollowingInProgressAC,\r\n    unfollowAC, unFollowThunkCreator,\r\n    UsersArrayType\r\n} from \"../../redux/friendsReducer\";\r\nimport FindFriends from \"./FindFriends\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {withAuthRedirect} from \"../Hoc/withAuthRedirect\";\r\nimport {\r\n    getCurrentPage, getFollowingInProgress,\r\n    getIsFetching,\r\n    getIsFollowingInProgress,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsersSelector\r\n} from \"../../redux/usersSelectors\";\r\n\r\n\r\nexport type MapStatePropsType = {\r\n    users: Array<UsersArrayType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    isFollowingInProgress: boolean\r\n    followingInProgress: Array<number>\r\n}\r\n\r\nexport type MapDispatchPropsType = {\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    setCurrentPage: (pageNumber: number) => void\r\n    setFollowingInProgress: (isFollowingInProgress: boolean, userId: number) => void\r\n    getUsersThunkCreator: (currentPage: number, pageSize: number) => void\r\n    followThunkCreator: (userId: number) => void\r\n    unFollowThunkCreator: (userId: number) => void\r\n}\r\n\r\nlet mapStateToProps = (state: RootState): MapStatePropsType => {\r\n    return {\r\n        users: getUsersSelector(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        isFollowingInProgress: getIsFollowingInProgress(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch: ThunkDispatch<RootState, unknown, FriendsReducerActionTypes>)\r\n    : MapDispatchPropsType => {\r\n    return {\r\n        follow: (userId) => {\r\n            dispatch(followAC(userId))\r\n        },\r\n        unfollow: (userId) => {\r\n            dispatch(unfollowAC(userId))\r\n        },\r\n        setCurrentPage: (pageNumber) => {\r\n            dispatch(setCurrentPageAC(pageNumber))\r\n        },\r\n        setFollowingInProgress: (isFollowingInProgress, userId) => {\r\n            dispatch(setFollowingInProgressAC(isFollowingInProgress, userId))\r\n        },\r\n        getUsersThunkCreator: (currentPage: number, pageSize: number) => {\r\n            dispatch(getUsersThunkCreator(currentPage, pageSize))\r\n        },\r\n        followThunkCreator: (userId) => {\r\n            dispatch(followThunkCreator(userId))\r\n        },\r\n        unFollowThunkCreator: (userId) => {\r\n            dispatch(unFollowThunkCreator(userId))\r\n        },\r\n    }\r\n}\r\n\r\n\r\nexport type FindFriendsAPIContainerPropsType = MapStatePropsType & MapDispatchPropsType;\r\n\r\nclass FindFriendsAPIContainer extends React.Component<FindFriendsAPIContainerPropsType, RootState> {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsersThunkCreator(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.setCurrentPage(pageNumber);\r\n        this.props.getUsersThunkCreator(pageNumber, this.props.pageSize);\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <FindFriends\r\n                users={this.props.users}\r\n                pageSize={this.props.pageSize}\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                isFetching={this.props.isFetching}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                setFollowingInProgress={this.props.setFollowingInProgress}\r\n                isFollowingInProgress={this.props.isFollowingInProgress}\r\n                followingInProgress={this.props.followingInProgress}\r\n                followThunkCreator={this.props.followThunkCreator}\r\n                unFollowThunkCreator={this.props.unFollowThunkCreator}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect<MapStatePropsType, MapDispatchPropsType, {}, RootState>\r\n    (mapStateToProps, mapDispatchToProps)\r\n)(FindFriendsAPIContainer)\r\n\r\n\r\n// without compose\r\n// let AuthRedirectComponent = withAuthRedirect(FindFriendsAPIContainer);\r\n// let FindFriendsContainer = connect<MapStatePropsType, MapDispatchPropsType, {}, RootState>\r\n// (mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\r\n// export default FindFriendsContainer;","import {profileAPI} from \"../API/API\";\r\nimport {RootState} from \"./redux-store\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\n\r\ntype initialStateType = typeof initialState\r\n\r\n\r\nexport type PostDataArray = {\r\n    id: number\r\n    message: string\r\n    like: number\r\n}\r\nexport type ContactsType = {\r\n    facebook: string\r\n    website: string\r\n    vk: string\r\n    twitter: string\r\n    instagram: string\r\n    youtube: string\r\n    github: string\r\n    mainLink: string\r\n}\r\nexport type PhotosType = {\r\n    small: string | null\r\n    large: string | null\r\n}\r\nexport type ProfileType = {\r\n    userId: number\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    fullName: string\r\n    contacts: ContactsType\r\n    photos: PhotosType\r\n}\r\n\r\nlet initialState = {\r\n    postData: [\r\n        {id: 1, message: 'Hey, how you doing?', like: 5},\r\n        {id: 2, message: 'What\\'s cooking, good looking?', like: 8},\r\n    ] as Array<PostDataArray>,\r\n    newPostText: '' as string,\r\n    profile: null as ProfileType | null,\r\n    status: '' as string\r\n}\r\n\r\nexport type ProfileReducerActionTypes = AddPostACType | SetUserProfileACType | SetStatusACType\r\n\r\nconst profileReducer = (state: initialStateType = initialState, action: ProfileReducerActionTypes): initialStateType => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let postDataPushItem = {\r\n                id: 3,\r\n                message: action.newPostText,\r\n                like: 9,\r\n            }\r\n            return {\r\n                ...state,\r\n                postData: [postDataPushItem, ...state.postData],\r\n                newPostText: '',\r\n            };\r\n\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state, profile: action.profile\r\n            };\r\n        }\r\n\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state, status: action.status\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type AddPostACType = {\r\n    type: typeof ADD_POST\r\n    newPostText: string\r\n\r\n}\r\n\r\nexport type SetUserProfileACType = {\r\n    type: typeof SET_USER_PROFILE,\r\n    profile: ProfileType\r\n}\r\nexport type SetStatusACType = {\r\n    type: typeof SET_STATUS,\r\n    status: string\r\n}\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nexport const addPostActionCreator = (newPostText: string): AddPostACType => ({type: ADD_POST, newPostText});\r\n\r\nexport const setUserProfileAC = (profile: ProfileType): SetUserProfileACType => ({type: SET_USER_PROFILE, profile});\r\n\r\nexport const getProfileInfoThunkCreator = (userId: string)\r\n    : ThunkAction<void, RootState, unknown, ProfileReducerActionTypes> => {\r\n    return (\r\n        (dispatch, getState) => {\r\n            profileAPI.getProfileInfo(userId)\r\n                .then(response => {\r\n                    dispatch(setUserProfileAC(response.data));\r\n                })\r\n        }\r\n    )\r\n}\r\n\r\nexport const setStatusAC = (status: string): SetStatusACType => ({type: SET_STATUS, status});\r\n\r\nexport const getStatusThunkCreator = (userId: number)\r\n    : ThunkAction<void, RootState, unknown, ProfileReducerActionTypes> => {\r\n    return (\r\n        (dispatch, getState) => {\r\n            profileAPI.getStatus(userId)\r\n                .then(response => {\r\n                    dispatch(setStatusAC(response.data))\r\n                })\r\n        }\r\n    )\r\n}\r\nexport const updateStatusThunkCreator = (status: string)\r\n    : ThunkAction<void, RootState, unknown, ProfileReducerActionTypes> => {\r\n    return (\r\n        (dispatch, getState) => {\r\n            profileAPI.updateStatus(status)\r\n                .then(response => {\r\n                    if (response.data.resultCode === 0) {\r\n                        dispatch(setStatusAC(status))\r\n                    }\r\n                })\r\n        }\r\n    )\r\n}\r\n\r\nexport default profileReducer;","import React from 'react';\r\nimport obj from './Post.module.css';\r\n\r\ntype PostPropsType = {\r\n    message: string\r\n    like: number\r\n}\r\n\r\nfunction Post(props: PostPropsType) {\r\n    return (\r\n\r\n        <div className={obj.old_posts}>\r\n\r\n            <div className={obj.img_wrapper}>\r\n                <img className={obj.ava} src={'/img/default.png'} alt='Avatar'/>\r\n            </div>\r\n\r\n            <div className={obj.old_post_item}>\r\n                <div className={obj.old_post_form}>\r\n                    <div className={obj.user_name}><h4>Alexey Gorbachevskiy</h4></div>\r\n                    <textarea  value={props.message} readOnly className={obj.textarea}\r\n                              rows={4} cols={60} id='new_post_text_area' name='new_post_text_area'/>\r\n                    <div className={obj.buttons_wrapper}>\r\n                        <div className={obj.like}><p>Like: {props.like}</p></div>\r\n\r\n                        <div className={obj.extra_wrapper}>\r\n                            <button className={obj.change_button}\r\n                                    value={'Edit'}><i className='fa fa-edit'/> Edit\r\n                            </button>\r\n                            <button className={obj.remove_button}\r\n                                    value={'Remove'}><i className='fa fa-trash'/> Remove\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Post;","import React from 'react';\r\nimport style from \"./MyPosts.module.css\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../Utils/Validators/validators\";\r\nimport {PostTextarea} from \"../../Common/FormsControls/FormsControls\";\r\n\r\n\r\nconst maxLength = maxLengthCreator(10)\r\n\r\n\r\nexport function AddNewPostForm(props: any) {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={style.new_post_form}>\r\n            <h2>New Post</h2>\r\n            <Field component={PostTextarea} name='newPostText'\r\n                   placeholder={'What\\'s new...'}\r\n                   rows={4} cols={60}\r\n                   validate={[required, maxLength]}\r\n            />\r\n            <button className={style.new_post_button}\r\n                    value={'Post'}><i className='fa fa-paper-plane'/> Post\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport const AddNewPostFormRedux = reduxForm({form: 'AddNewPostForm'})(AddNewPostForm)","import React from 'react';\r\nimport obj from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {AddNewPostFormRedux} from \"./AddNewPostForm\";\r\n\r\ntype PostDataArray = {\r\n    id: number\r\n    message: string\r\n    like: number\r\n}\r\n\r\nexport type MyPostsPropsType = {\r\n    postData: Array<PostDataArray>\r\n    newPostText: string\r\n    addPost: (newPostText: string) => void\r\n}\r\n\r\nconst MyPosts = React.memo((props: MyPostsPropsType) => {\r\n\r\n    let postElements = props.postData.map((t: PostDataArray) => {\r\n        return <Post key={t.id} message={t.message} like={t.like}/>\r\n    });\r\n\r\n\r\n    const onAddPost = (values: any) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={obj.posts}>\r\n            <div className={obj.new_post}>\r\n                {/* eslint-disable-next-line react/jsx-no-undef */}\r\n                <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n                {/*<form className={obj.new_post_form}>*/}\r\n                {/*    <h2>New Post</h2>*/}\r\n                {/*    <textarea className={obj.textarea} onChange={onPostChange} value={props.newPostText} ref={textArea}*/}\r\n                {/*              placeholder={'What\\'s new...'} rows={4} cols={60} id='new_post_text_area'*/}\r\n                {/*              name='new_post_text_area'/>*/}\r\n                {/*    <button onClick={onAddPost} className={obj.new_post_button}*/}\r\n                {/*            value={'Post'}><i className='fa fa-paper-plane'/> Post*/}\r\n                {/*    </button>*/}\r\n                {/*</form>*/}\r\n            </div>\r\n            {postElements}\r\n        </div>\r\n    );\r\n});\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {\r\n    addPostActionCreator, PostDataArray, ProfileReducerActionTypes,\r\n} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootState} from \"../../../redux/redux-store\";\r\nimport {Dispatch} from 'redux';\r\n\r\n\r\ntype MapStatePropsType = {\r\n    postData: Array<PostDataArray>\r\n    newPostText: string\r\n}\r\ntype MapDispatchPropsType = {\r\n    addPost: (newPostText:string) => void\r\n}\r\n\r\n\r\nlet mapStateToProps = (state: RootState): MapStatePropsType => {\r\n    return {\r\n        postData: state.profilePage.postData,\r\n        newPostText: state.profilePage.newPostText,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: Dispatch<ProfileReducerActionTypes>): MapDispatchPropsType => {\r\n    return {\r\n        addPost: (newPostText:string) => dispatch(addPostActionCreator(newPostText)),\r\n    }\r\n}\r\n\r\n\r\nlet MyPostsContainer = connect<MapStatePropsType, MapDispatchPropsType, {}, RootState>\r\n(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\n\r\nexport default MyPostsContainer;","import React, {ChangeEvent} from 'react'\r\nimport style from './ProfileStatus.module.css'\r\n\r\n\r\ntype ProfileStatusPropsType = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nclass ProfileStatus extends React.Component<ProfileStatusPropsType, any> {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateActiveMode = () => {\r\n        this.setState({...this.state, editMode: true})\r\n    }\r\n\r\n    deactivateActiveMode = () => {\r\n        this.setState({...this.state, editMode: false});\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({...this.state, status: e.currentTarget.value})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                Status:\r\n                {\r\n                    this.state.editMode\r\n                        ?\r\n                        <input\r\n                            onChange={this.onStatusChange}\r\n                            autoFocus\r\n                            onBlur={this.deactivateActiveMode}\r\n                            className={style.input}\r\n                            value={this.state.status}\r\n                            type='text'/>\r\n                        :\r\n                        <p className={style.status_text}\r\n                           onDoubleClick={this.activateActiveMode}\r\n                        >{this.props.status ? this.props.status : ' No status'}\r\n                        </p>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default ProfileStatus","import React from 'react';\r\nimport style from './ProfileInfo.module.css';\r\nimport {ProfileType} from \"../../../redux/profileReducer\";\r\nimport ProfileStatus from './ProfileStatus'\r\n\r\ntype ProfileInfo = {\r\n    profile: ProfileType | null\r\n    status:string\r\n    updateStatus:(status:string)=>void\r\n}\r\n\r\nfunction ProfileInfo(props: ProfileInfo) {\r\n    return (\r\n        <div className={style.data_wrapper}>\r\n            <div className={style.ava_wrapper}>\r\n                <img className={style.ava}\r\n                     src={props.profile?.photos.large\r\n                         ?\r\n                         props.profile?.photos.large\r\n                         : process.env.PUBLIC_URL + '/img/default.png'}\r\n                     alt='Avatar'\r\n                />\r\n            </div>\r\n            <div className={style.data}>\r\n                <div className={style.data_header}>\r\n                    <h2>\r\n                        {props.profile?.fullName\r\n                            .replace(props.profile?.fullName[0], props.profile?.fullName[0].toUpperCase())}\r\n                    </h2>\r\n                </div>\r\n                <div className={style.data_items}>\r\n                    <div className={style.status}>\r\n                        <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n                    </div>\r\n                    <div className={style.job_status}>\r\n                        <p>Job search\r\n                            status: {props.profile?.lookingForAJob ? props.profile?.lookingForAJob : 'Looking for a job.'}</p>\r\n                    </div>\r\n                    <div className={style.job_description}>\r\n                        <p>Job\r\n                            description: {props.profile?.lookingForAJobDescription ? props.profile.lookingForAJobDescription : 'Looking for a frontend developer position.'}\r\n                        </p>\r\n                    </div>\r\n                    <div className={style.contacts}>\r\n                        <p>My\r\n                            contacts: {props.profile?.contacts.twitter ? props.profile?.contacts.twitter : 'Oops.'}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport obj from './Profile.module.css';\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport {WithRouterPropsType} from \"./ProfileContainer\";\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\n\r\n\r\nfunction Profile(props: WithRouterPropsType) {\r\n    if (!props.profile) {\r\n        return (\r\n            <div className={obj.preloader_wrapper}>\r\n                <Preloader/>\r\n            </div>\r\n        )\r\n    }\r\n    if ((props.profile) && (props.match.params.userId)) {\r\n        if (parseInt(props.match.params.userId) !== props.profile.userId) {\r\n            return (\r\n                <div className={obj.preloader_wrapper}>\r\n                    <Preloader/>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    return (\r\n        <div className={obj.content}>\r\n            <ProfileInfo profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatus}\r\n            />\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {RootState} from \"../../redux/redux-store\";\r\nimport {\r\n    getProfileInfoThunkCreator, getStatusThunkCreator, ProfileReducerActionTypes,\r\n    ProfileType, updateStatusThunkCreator,\r\n} from \"../../redux/profileReducer\";\r\nimport {RouteComponentProps, withRouter} from \"react-router\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {withAuthRedirect} from \"../Hoc/withAuthRedirect\";\r\n\r\n\r\nexport type ProfileContainerPropsType = MapStatePropsType & MapDispatchPropsType;\r\nexport type PathParamsType = { userId?: string | undefined }\r\nexport type WithRouterPropsType = RouteComponentProps<PathParamsType> & ProfileContainerPropsType;\r\n\r\nclass ProfileContainer extends React.Component<WithRouterPropsType, {}> {\r\n\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            if (this.props.authorizedUserId) {\r\n                userId = this.props.authorizedUserId.toString();\r\n\r\n            }\r\n\r\n        }\r\n        this.props.getProfileInfo(userId!);\r\n        this.props.getStatus(parseInt(userId!));\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<WithRouterPropsType>, prevState: Readonly<{}>, snapshot?: any) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({...this.state, status: this.props.status})\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}/>\r\n        );\r\n    }\r\n}\r\n\r\ntype MapStatePropsType = {\r\n    profile: ProfileType | null\r\n    status: string\r\n    authorizedUserId: number | null\r\n    isAuth: boolean\r\n}\r\ntype MapDispatchPropsType = {\r\n    getProfileInfo: (userId: string) => void\r\n    getStatus: (userId: number) => void\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nconst mapStateToProps = (state: RootState): MapStatePropsType => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.data.id,\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: ThunkDispatch<RootState, unknown, ProfileReducerActionTypes>)\r\n    : MapDispatchPropsType => {\r\n    return {\r\n        getProfileInfo: (userId) => dispatch(getProfileInfoThunkCreator(userId)),\r\n        getStatus: (userId: number) => dispatch(getStatusThunkCreator(userId)),\r\n        updateStatus: (status: string) => dispatch(updateStatusThunkCreator(status)),\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    withRouter,\r\n    connect<MapStatePropsType, MapDispatchPropsType, {}, RootState>\r\n    (mapStateToProps, mapDispatchToProps)\r\n)(ProfileContainer)\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\r\n// let WithUrlDataContainer = withRouter(AuthRedirectComponent);\r\n// export default connect<MapStatePropsType, MapDispatchPropsType, {}, RootState>\r\n// (mapStateToProps, mapDispatchToProps)(WithUrlDataContainer);","import React from 'react';\r\nimport obj from './Header.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {HeaderContainerPropsType} from \"./HeaderContainer\";\r\n\r\n\r\nfunction Header(props: HeaderContainerPropsType) {\r\n    return (\r\n        <header className={obj.header}>\r\n            <div className={obj.wrap}>\r\n                <div className={`${obj.logo}`}>\r\n                    <NavLink className={obj.logo_link} to='/profile'>\r\n                        <img className={obj.logo_img} src={process.env.PUBLIC_URL + '/img/logo.png'}/>\r\n                    </NavLink>\r\n                </div>\r\n\r\n                <div className={obj.login}>\r\n                        {\r\n                            props.isAuth\r\n                                ?\r\n                                <div className={obj.auth_wrapper}>\r\n                                    <p>{props.userData!.login}</p>\r\n                                    <button className={obj.logout_btn} onClick={props.logout}>Log Out</button>\r\n                                </div>\r\n                                :\r\n                                <NavLink className={obj.login_link} to='/login'>Log In</NavLink>\r\n\r\n                        }\r\n                </div>\r\n\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\n\r\nexport default Header;","import {authAPI} from \"../API/API\";\r\nimport {RootState} from \"./redux-store\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\ntype initialStateType = typeof initialState\r\n\r\n\r\nlet initialState = {\r\n    data: {\r\n        email: null as string | null,\r\n        id: null as number | null,\r\n        login: null as string | null,\r\n    },\r\n    isAuth: false,\r\n}\r\n\r\nexport type AuthReducerActionTypes = SetAuthUserDataACType\r\nconst authReducer = (state: initialStateType = initialState, action: AuthReducerActionTypes): initialStateType => {\r\n\r\n    switch (action.type) {\r\n        case SET_AUTH_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                data: {...action.userData!},\r\n                isAuth: action.isAuth,\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport type UserDataType = {\r\n    email: string | null,\r\n    id: number | null,\r\n    login: string | null,\r\n} | null\r\ntype SetAuthUserDataACType = {\r\n    type: typeof SET_AUTH_USER_DATA\r\n    userData: UserDataType\r\n    isAuth: boolean\r\n}\r\nconst SET_AUTH_USER_DATA = 'SET_USER_DATA';\r\n\r\n\r\nexport const setAuthUserDataAC = (userData: UserDataType, isAuth: boolean): SetAuthUserDataACType => ({\r\n    type: SET_AUTH_USER_DATA,\r\n    userData,\r\n    isAuth\r\n});\r\n\r\n\r\nexport const getAuthInfoThunkCreator = (): ThunkAction<void, RootState, unknown, AuthReducerActionTypes> => {\r\n    return (\r\n        async (dispatch, getState) => {\r\n            let response = await authAPI.getAuthInfo();\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setAuthUserDataAC(response.data.data, true));\r\n            }\r\n        }\r\n    )\r\n};\r\n\r\n\r\n//TODO --- AuthReducerActionTypes instead any\r\nexport const loginThunkCreator = (email: string, password: string, rememberMe: boolean): ThunkAction<void, RootState, unknown, any> => {\r\n    return (\r\n        async (dispatch, getState) => {\r\n            let response = await authAPI.login(email, password, rememberMe)\r\n\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(getAuthInfoThunkCreator())\r\n            } else {\r\n                const message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error'\r\n                const action = stopSubmit('login', {_error: message});\r\n                dispatch(action);\r\n            }\r\n        }\r\n    )\r\n};\r\n\r\nexport const logoutThunkCreator = (): ThunkAction<void, RootState, unknown, AuthReducerActionTypes> => {\r\n    return (\r\n        (dispatch, getState) => {\r\n            authAPI.logout()\r\n                .then(response => {\r\n                    if (response.data.resultCode === 0) {\r\n                        dispatch(setAuthUserDataAC(null, false));\r\n                    }\r\n                })\r\n        }\r\n    )\r\n};\r\n\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootState} from \"../../redux/redux-store\";\r\nimport {\r\n    AuthReducerActionTypes,\r\n    getAuthInfoThunkCreator,\r\n    logoutThunkCreator,\r\n    UserDataType\r\n} from \"../../redux/authReducer\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\n\r\n\r\nexport type HeaderContainerPropsType = MapStatePropsType & MapDispatchPropsType;\r\n\r\n\r\nclass HeaderContainer extends React.Component<HeaderContainerPropsType, {}> {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props}/>\r\n        );\r\n    }\r\n}\r\n\r\n\r\ntype MapStatePropsType = {\r\n    userData: UserDataType\r\n    isAuth: boolean\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    logout: () => void\r\n}\r\n\r\nconst mapStateToProps = (state: RootState): MapStatePropsType => {\r\n    return {\r\n        userData: state.auth.data,\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch: ThunkDispatch<RootState, unknown, AuthReducerActionTypes>)\r\n    : MapDispatchPropsType => {\r\n    return {\r\n        logout: () => {\r\n            dispatch(logoutThunkCreator())\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default connect<MapStatePropsType, MapDispatchPropsType, {}, RootState>\r\n(mapStateToProps, mapDispatchToProps)(HeaderContainer);","import style from \"./Login.module.css\";\r\nimport React from \"react\";\r\nimport {Field} from \"redux-form\";\r\nimport {LoginInput} from \"../Common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../Utils/Validators/validators\";\r\n\r\nconst maxLength = maxLengthCreator(40)\r\n\r\nfunction LoginForm(props: any) {\r\n    return (\r\n        <form className={style.form} onSubmit={props.handleSubmit}>\r\n\r\n            <h1 className={style.form_header}>Log In</h1>\r\n\r\n            <div className={style.fields}>\r\n                <div>\r\n                    <Field name={'email'}\r\n                        // className={style.input}\r\n                           placeholder='Email' component={LoginInput}\r\n                           type=\"text\"\r\n                           validate={[required, maxLength]}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <Field name={'password'}\r\n                        // className={style.input}\r\n                           placeholder='Password' component={LoginInput}\r\n                           type=\"password\"\r\n                           validate={[required, maxLength]}\r\n                    />\r\n                </div>\r\n                <div className={style.remember}>\r\n                    <Field name={'rememberMe'} component={'input'} type=\"checkbox\"/>\r\n                    <> Remember</>\r\n                </div>\r\n                {props.error\r\n                    ?\r\n                    <div className={style.error}>\r\n                        {props.error}\r\n                    </div>\r\n                    : ''\r\n                }\r\n            </div>\r\n\r\n            <div className={style.login_btn_wrapper}>\r\n                <button className={style.login_btn}>Log In</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default LoginForm;","import React from 'react';\r\nimport style from './Login.module.css'\r\nimport {reduxForm} from \"redux-form\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootState} from \"../../redux/redux-store\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {AuthReducerActionTypes, loginThunkCreator, logoutThunkCreator} from \"../../redux/authReducer\";\r\nimport {Redirect} from \"react-router\";\r\n\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm)\r\n\r\n\r\nfunction Login(props: any) {\r\n    const onSubmit = (formData: any) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={style.login_wrapper}>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport type MapStatePropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\n\r\nlet mapStateToProps = (state: RootState): MapStatePropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport type MapDispatchPropsType = {\r\n    login: (email: string, password: string, rememberMe: boolean) => void\r\n    logout: () => void\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: ThunkDispatch<RootState, unknown, AuthReducerActionTypes>)\r\n    : MapDispatchPropsType => {\r\n    return {\r\n        login: (email, password, rememberMe) => {\r\n            dispatch(loginThunkCreator(email, password, rememberMe))\r\n        },\r\n        logout: () => {\r\n            dispatch(logoutThunkCreator())\r\n        },\r\n    }\r\n}\r\n\r\n\r\nexport default connect<MapStatePropsType, MapDispatchPropsType, {}, RootState>\r\n(mapStateToProps, mapDispatchToProps)(Login)\r\n","import {authAPI} from \"../API/API\";\r\nimport {RootState} from \"./redux-store\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {getAuthInfoThunkCreator} from \"./authReducer\";\r\n\r\ntype initialStateType = typeof initialState\r\n\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nexport type AppReducerActionTypes = InitializedSuccessACType\r\nconst appReducer = (state: initialStateType = initialState, action: AppReducerActionTypes): initialStateType => {\r\n\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\ntype InitializedSuccessACType = {\r\n    type: typeof INITIALIZED_SUCCESS\r\n}\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\nexport const initializedSuccessAC = (): InitializedSuccessACType => ({\r\n    type: INITIALIZED_SUCCESS\r\n});\r\n\r\n\r\nexport const initializeAppThunkCreator = (): ThunkAction<void, RootState, unknown, AppReducerActionTypes> => {\r\n    return (\r\n        (dispatch: any, getState) => {\r\n            const promise = dispatch(getAuthInfoThunkCreator())\r\n            Promise.all([promise]).then(\r\n                () => {\r\n                    dispatch(initializedSuccessAC())\r\n                }\r\n            )\r\n\r\n        }\r\n    )\r\n};\r\n\r\n\r\nexport default appReducer;","import {createStore, combineReducers, applyMiddleware,compose} from 'redux';\r\nimport profileReducer from \"./profileReducer\";\r\nimport messagesItemReducer from \"./messagesItemReducer\";\r\nimport friendsReducer from \"./friendsReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport appReducer from \"./appReducer\";\r\n\r\n\r\nlet rootReducer = combineReducers(\r\n    {\r\n        profilePage: profileReducer,\r\n        messagesPage: messagesItemReducer,\r\n        // friendsPage: friendsReducer,\r\n        findFriendsPage: friendsReducer,\r\n        auth: authReducer,\r\n        form: formReducer,\r\n        app: appReducer,\r\n    }\r\n);\r\n\r\n\r\n// Connecting of Redux Dev Tool\r\n\r\n// declare global {\r\n//         interface Window {\r\n//                 __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n//         }\r\n// }\r\n// const composeEnhancers = window['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__'] as typeof compose || compose;\r\n// const store = createStore(rootReducer, /* preloadedState, */ composeEnhancers(\r\n//     applyMiddleware(thunkMiddleware)\r\n// ));\r\n// ------------------------------------------------------------------------------------------------------\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>\r\n\r\nlet store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\n\r\nexport default store;","import React from 'react';\r\nimport './App.css';\r\nimport Nav from './components/NavBar/Nav';\r\nimport News from './components/News/News';\r\nimport Music from './components/Music/Music';\r\nimport Settings from './components/Settings/Settings';\r\nimport FriendsContainer from \"./components/Friends/FriendsContainer\";\r\nimport {BrowserRouter, Redirect, Route, withRouter} from 'react-router-dom';\r\nimport MessagesContainer from \"./components/Messages/MessagesContainer\";\r\nimport FindFriendsContainer from \"./components/FindFriends/FindFriendsContainer\";\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Login from \"./components/Login/Login\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport store, {RootState} from \"./redux/redux-store\";\r\nimport {AuthReducerActionTypes} from \"./redux/authReducer\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {compose} from \"redux\";\r\nimport {initializeAppThunkCreator} from \"./redux/appReducer\";\r\nimport Preloader from \"./components/Common/Preloader/Preloader\";\r\n\r\nclass App extends React.Component<MapDispatchPropsType & MapStatePropsType, {}> {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n        return (\r\n\r\n            <div className='container'>\r\n                <HeaderContainer/>\r\n                <Nav/>\r\n                <Route exact path='/' render={() => <Redirect to={'/profile'}/>}/>\r\n                <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\r\n                <Route path='/friends' render={() => <FriendsContainer/>}/>\r\n                <Route path='/messages' render={() => <MessagesContainer/>}/>\r\n                <Route path='/news' render={() => <News/>}/>\r\n                <Route path='/music' render={() => <Music/>}/>\r\n                <Route path='/settings' render={() => <Settings/>}/>\r\n                <Route path='/findFriends' render={() => <FindFriendsContainer/>}/>\r\n                <Route path='/login' render={() => <Login/>}/>\r\n                {/*<Route path='/profile' component={Profile}/>*/}\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\ntype MapStatePropsType = {\r\n    initialized: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: RootState): MapStatePropsType => {\r\n    return {\r\n        initialized: state.app.initialized\r\n    }\r\n}\r\n\r\n\r\ntype MapDispatchPropsType = {\r\n    initializeApp: () => void\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch: ThunkDispatch<RootState, unknown, AuthReducerActionTypes>)\r\n    : MapDispatchPropsType => {\r\n    return {\r\n        initializeApp: () => {\r\n            dispatch(initializeAppThunkCreator())\r\n        },\r\n    }\r\n}\r\n\r\n\r\nlet AppContainer = compose<React.ComponentType>(\r\n    withRouter,\r\n    connect<MapStatePropsType, MapDispatchPropsType, {}, RootState>(mapStateToProps, mapDispatchToProps)\r\n)(App)\r\n\r\n\r\nexport const Chatter: React.FC = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <React.StrictMode>\r\n                <Provider store={store}>\r\n                    <AppContainer/>\r\n                </Provider>\r\n            </React.StrictMode>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\nimport '../node_modules/font-awesome/css/font-awesome.min.css';\r\n\r\nimport {Chatter} from \"./App\";\r\n\r\n\r\nReactDOM.render(\r\n    <Chatter/>,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login_wrapper\":\"Login_login_wrapper__AkEG8\",\"form_header\":\"Login_form_header__e1k3O\",\"form\":\"Login_form__3_EUy\",\"input\":\"Login_input__T1o1n\",\"remember\":\"Login_remember__IJhQy\",\"login_btn_wrapper\":\"Login_login_btn_wrapper__DW-sO\",\"login_btn\":\"Login_login_btn__3cyaU\",\"error\":\"Login_error__ertmk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend_item_container\":\"FriendItem_friend_item_container__2fEW9\",\"info_wrapper\":\"FriendItem_info_wrapper__3tAz2\",\"underline\":\"FriendItem_underline__3GQZn\",\"img_wrapper\":\"FriendItem_img_wrapper__B8Zt9\",\"ava\":\"FriendItem_ava__3bQUW\",\"name\":\"FriendItem_name__3tURL\",\"to_messages\":\"FriendItem_to_messages__1gwoZ\",\"link\":\"FriendItem_link__3LH9W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2Rxve\",\"wrap\":\"Header_wrap__3IoX8\",\"logo\":\"Header_logo__1Cz1i\",\"logo_img\":\"Header_logo_img__1UD25\",\"login\":\"Header_login__1OUfw\",\"login_link\":\"Header_login_link__2wvha\",\"item\":\"Header_item__PjlFt\",\"auth_wrapper\":\"Header_auth_wrapper__2PXAU\",\"logout_btn\":\"Header_logout_btn__3n_1w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message_container\":\"NotYourMessage_message_container__14TU5\",\"img_wrapper\":\"NotYourMessage_img_wrapper__wbbWr\",\"image\":\"NotYourMessage_image__rVcde\",\"message_body\":\"NotYourMessage_message_body__3tFuO\",\"message_text\":\"NotYourMessage_message_text__3DzxR\",\"time_wrapper\":\"NotYourMessage_time_wrapper__2DDvx\",\"time\":\"NotYourMessage_time__2nb1h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog_item\":\"DialogItem_dialog_item__2j8vs\",\"active\":\"DialogItem_active__1XA1c\",\"img_container\":\"DialogItem_img_container__1IaM5\",\"friend_img\":\"DialogItem_friend_img__1n4LT\",\"name_container\":\"DialogItem_name_container__2AmnJ\",\"friend_name\":\"DialogItem_friend_name__2MpO2\",\"text\":\"DialogItem_text__21Pga\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input_error\":\"FormsControls_input_error__1CLQk\",\"post_textarea\":\"FormsControls_post_textarea__1qDPZ\",\"messages_textarea\":\"FormsControls_messages_textarea__3ffV2\",\"messages_input_error\":\"FormsControls_messages_input_error__2hr8s\",\"login_error_text\":\"FormsControls_login_error_text__2ObwE\",\"login_input\":\"FormsControls_login_input__2zxWf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message_container\":\"YourMessage_message_container__xgsfS\",\"message_body\":\"YourMessage_message_body__1fs6U\",\"message_text\":\"YourMessage_message_text__22rSq\",\"time_wrapper\":\"YourMessage_time_wrapper__1ClUn\",\"time\":\"YourMessage_time__1rJSV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pages_wrapper\":\"Paginator_pages_wrapper__1Ibsn\",\"page\":\"Paginator_page__33183\",\"current_page_is_active\":\"Paginator_current_page_is_active__1oVA4\",\"next_btn\":\"Paginator_next_btn__2eb8q\",\"back_btn\":\"Paginator_back_btn__37qKq\",\"preloader_wrapper\":\"Paginator_preloader_wrapper__2Lq-8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message_side_container\":\"MessageItem_message_side_container__csgNy\",\"message_item\":\"MessageItem_message_item__C6XQI\",\"input_container\":\"MessageItem_input_container__4oWtG\",\"send_btn\":\"MessageItem_send_btn__1XX39\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__2n4sO\",\"new_post\":\"MyPosts_new_post__2cISy\",\"new_post_form\":\"MyPosts_new_post_form__xERzI\",\"new_post_button\":\"MyPosts_new_post_button__1dG8J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends_container\":\"FindFriends_friends_container__1f94e\",\"friends_list\":\"FindFriends_friends_list__1Tqz0\",\"footer_wrapper\":\"FindFriends_footer_wrapper__WRKSS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages_container\":\"Messages_messages_container__1XqQz\",\"dialogs_items\":\"Messages_dialogs_items__2VYzu\",\"messages_items\":\"Messages_messages_items__i1oGB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__pIfrp\",\"preloader_wrapper\":\"Profile_preloader_wrapper__2oUDZ\"};"],"sourceRoot":""}